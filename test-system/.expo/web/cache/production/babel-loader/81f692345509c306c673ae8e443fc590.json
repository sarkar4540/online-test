{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import color from'color';import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Text from\"./Text\";import{withTheme}from\"../../core/theming\";var StyledText=function StyledText(_ref){var theme=_ref.theme,alpha=_ref.alpha,family=_ref.family,style=_ref.style,rest=_objectWithoutProperties(_ref,[\"theme\",\"alpha\",\"family\",\"style\"]);var textColor=color(theme.colors.text).alpha(alpha).rgb().string();var font=theme.fonts[family];var writingDirection=I18nManager.isRTL?'rtl':'ltr';return React.createElement(Text,_extends({},rest,{style:[_objectSpread(_objectSpread({color:textColor},font),{},{textAlign:'left',writingDirection:writingDirection}),style]}));};export default withTheme(StyledText);","map":{"version":3,"sources":["StyledText.tsx"],"names":["StyledText","style","rest","textColor","color","theme","font","writingDirection","I18nManager","textAlign","withTheme"],"mappings":"i7DAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mEAGA,MAAA,CAAA,IAAA,cACA,OAAA,SAAA,0BASA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAA,IAAA,CAAqD,IAApD,CAAA,KAAoD,CAAA,IAAA,CAApD,KAAoD,CAApD,KAAoD,CAAA,IAAA,CAApD,KAAoD,CAApD,MAAoD,CAAA,IAAA,CAApD,MAAoD,CAA5BC,KAA4B,CAAA,IAAA,CAA5BA,KAA4B,CAAlBC,IAAkB,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CACtE,GAAMC,CAAAA,SAAS,CAAGC,KAAK,CAACC,KAAK,CAALA,MAAAA,CAAND,IAAK,CAALA,CAAAA,KAAAA,CAAAA,KAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB,CACA,GAAME,CAAAA,IAAI,CAAGD,KAAK,CAALA,KAAAA,CAAb,MAAaA,CAAb,CACA,GAAME,CAAAA,gBAAgB,CAAGC,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,CAAzB,KAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAAE,CAAA,aAAA,CAAA,aAAA,CAAA,CACHJ,KAAK,CAAED,SADJ,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CACwBM,SAAS,CADjC,MAAA,CAC2CF,gBAAAA,CAAAA,gBAD3C,CAAA,CAAA,CAAA,KAAA,CAFT,CAAA,CAAA,CADF,CALF,CAAA,CAgBA,cAAeG,CAAAA,SAAS,CAAxB,UAAwB,CAAxB","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        { color: textColor, ...font, textAlign: 'left', writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(StyledText);\n"]},"metadata":{},"sourceType":"module"}