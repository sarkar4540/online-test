{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import ActivityIndicator from\"./ActivityIndicator\";import Icon from\"./Icon\";import Surface from\"./Surface\";import Text from\"./Typography/Text\";import TouchableRipple from\"./TouchableRipple/TouchableRipple\";import{black,white}from\"../styles/colors\";import{withTheme}from\"../core/theming\";var Button=function Button(_ref){var disabled=_ref.disabled,compact=_ref.compact,_ref$mode=_ref.mode,mode=_ref$mode===void 0?'text':_ref$mode,dark=_ref.dark,loading=_ref.loading,icon=_ref.icon,buttonColor=_ref.color,children=_ref.children,_ref$uppercase=_ref.uppercase,uppercase=_ref$uppercase===void 0?true:_ref$uppercase,accessibilityLabel=_ref.accessibilityLabel,onPress=_ref.onPress,onLongPress=_ref.onLongPress,style=_ref.style,theme=_ref.theme,contentStyle=_ref.contentStyle,labelStyle=_ref.labelStyle,testID=_ref.testID,rest=_objectWithoutProperties(_ref,[\"disabled\",\"compact\",\"mode\",\"dark\",\"loading\",\"icon\",\"color\",\"children\",\"uppercase\",\"accessibilityLabel\",\"onPress\",\"onLongPress\",\"style\",\"theme\",\"contentStyle\",\"labelStyle\",\"testID\"]);var _React$useRef=React.useRef(new Animated.Value(mode==='contained'?2:0)),elevation=_React$useRef.current;var handlePressIn=function handlePressIn(){if(mode==='contained'){var scale=theme.animation.scale;Animated.timing(elevation,{toValue:8,duration:200*scale,useNativeDriver:true}).start();}};var handlePressOut=function handlePressOut(){if(mode==='contained'){var scale=theme.animation.scale;Animated.timing(elevation,{toValue:2,duration:150*scale,useNativeDriver:true}).start();}};var colors=theme.colors,roundness=theme.roundness;var font=theme.fonts.medium;var backgroundColor,borderColor,textColor,borderWidth;if(mode==='contained'){if(disabled){backgroundColor=color(theme.dark?white:black).alpha(0.12).rgb().string();}else if(buttonColor){backgroundColor=buttonColor;}else{backgroundColor=colors.primary;}}else{backgroundColor='transparent';}if(mode==='outlined'){borderColor=color(theme.dark?white:black).alpha(0.29).rgb().string();borderWidth=StyleSheet.hairlineWidth;}else{borderColor='transparent';borderWidth=0;}if(disabled){textColor=color(theme.dark?white:black).alpha(0.32).rgb().string();}else if(mode==='contained'){var isDark;if(typeof dark==='boolean'){isDark=dark;}else{isDark=backgroundColor==='transparent'?false:!color(backgroundColor).isLight();}textColor=isDark?white:black;}else if(buttonColor){textColor=buttonColor;}else{textColor=colors.primary;}var rippleColor=color(textColor).alpha(0.32).rgb().string();var buttonStyle={backgroundColor:backgroundColor,borderColor:borderColor,borderWidth:borderWidth,borderRadius:roundness};var touchableStyle={borderRadius:style?StyleSheet.flatten(style).borderRadius||roundness:roundness};var _ref2=StyleSheet.flatten(labelStyle)||{},customLabelColor=_ref2.color,customLabelSize=_ref2.fontSize;var textStyle=_objectSpread({color:textColor},font);var elevationRes=disabled||mode!=='contained'?0:elevation;return React.createElement(Surface,_extends({},rest,{style:[styles.button,compact&&styles.compact,{elevation:elevationRes},buttonStyle,style]}),React.createElement(TouchableRipple,{borderless:true,delayPressIn:0,onPress:onPress,onLongPress:onLongPress,onPressIn:handlePressIn,onPressOut:handlePressOut,accessibilityLabel:accessibilityLabel,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{disabled:disabled},disabled:disabled,rippleColor:rippleColor,style:touchableStyle,testID:testID},React.createElement(View,{style:[styles.content,contentStyle]},icon&&loading!==true?React.createElement(View,{style:styles.icon},React.createElement(Icon,{source:icon,size:customLabelSize||16,color:customLabelColor||textColor})):null,loading?React.createElement(ActivityIndicator,{size:customLabelSize||16,color:customLabelColor||textColor,style:styles.icon}):null,React.createElement(Text,{numberOfLines:1,style:[styles.label,compact&&styles.compactLabel,uppercase&&styles.uppercaseLabel,textStyle,font,labelStyle]},children))));};var styles=StyleSheet.create({button:{minWidth:64,borderStyle:'solid'},compact:{minWidth:'auto'},content:{flexDirection:'row',alignItems:'center',justifyContent:'center'},icon:{marginLeft:12,marginRight:-4},label:{textAlign:'center',letterSpacing:1,marginVertical:9,marginHorizontal:16},compactLabel:{marginHorizontal:8},uppercaseLabel:{textTransform:'uppercase'}});export default withTheme(Button);","map":{"version":3,"sources":["Button.tsx"],"names":["Button","mode","color","uppercase","testID","rest","current","elevation","React","Animated","handlePressIn","scale","theme","toValue","duration","useNativeDriver","handlePressOut","roundness","font","backgroundColor","colors","borderColor","borderWidth","StyleSheet","textColor","isDark","rippleColor","buttonStyle","borderRadius","touchableStyle","style","fontSize","customLabelSize","textStyle","elevationRes","disabled","styles","compact","icon","loading","customLabelColor","button","minWidth","borderStyle","content","flexDirection","alignItems","justifyContent","marginLeft","marginRight","label","textAlign","letterSpacing","marginVertical","marginHorizontal","compactLabel","uppercaseLabel","textTransform","withTheme"],"mappings":"i7DAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mLASA,MAAA,CAAA,KAAA,KAAA,OAAA,CAEA,MAAA,CAAA,iBAAA,2BACA,MAAA,CAAA,IAAA,cACA,MAAA,CAAA,OAAA,iBACA,MAAA,CAAA,IAAA,yBACA,MAAA,CAAA,eAAA,yCACA,OAAA,KAAA,CAAA,KAAA,wBACA,OAAA,SAAA,uBA0GA,GAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAA,IAAA,CAmBF,IAnBG,CAAA,QAmBH,CAAA,IAAA,CAnBG,QAmBH,CAnBG,OAmBH,CAAA,IAAA,CAnBG,OAmBH,WAAA,IAAA,CAhBXC,IAgBW,CAhBXA,IAgBW,oBAnBG,MAmBH,WAnBG,IAmBH,CAAA,IAAA,CAnBG,IAmBH,CAnBG,OAmBH,CAAA,IAAA,CAnBG,OAmBH,CAnBG,IAmBH,CAAA,IAAA,CAnBG,IAmBH,CAnBG,WAmBH,CAAA,IAAA,CAZXC,KAYW,CAnBG,QAmBH,CAAA,IAAA,CAnBG,QAmBH,gBAAA,IAAA,CAVXC,SAUW,CAVXA,SAUW,yBAnBG,IAmBH,gBAnBG,kBAmBH,CAAA,IAAA,CAnBG,kBAmBH,CAnBG,OAmBH,CAAA,IAAA,CAnBG,OAmBH,CAnBG,WAmBH,CAAA,IAAA,CAnBG,WAmBH,CAnBG,KAmBH,CAAA,IAAA,CAnBG,KAmBH,CAnBG,KAmBH,CAAA,IAAA,CAnBG,KAmBH,CAnBG,YAmBH,CAAA,IAAA,CAnBG,YAmBH,CAnBG,UAmBH,CAAA,IAAA,CAnBG,UAmBH,CAFXC,MAEW,CAAA,IAAA,CAFXA,MAEW,CADRC,IACQ,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,UAAA,CAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CAAA,WAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,aAAA,CAAA,OAAA,CAAA,OAAA,CAAA,cAAA,CAAA,YAAA,CAAA,QAAA,CAAA,CAAA,mBACoBG,KAAK,CAALA,MAAAA,CAC7B,GAAIC,CAAAA,QAAQ,CAAZ,KAAA,CAAmBR,IAAI,GAAJA,WAAAA,CAAAA,CAAAA,CADrB,CACE,CAD6BO,CADpB,CACMD,SADN,eACHD,OADG,CAKX,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIT,IAAI,GAAR,WAAA,CAA0B,IAChBU,CAAAA,KADgB,CACNC,KAAK,CAAvB,SADwB,CAChBD,KADgB,CAExBF,QAAQ,CAARA,MAAAA,CAAAA,SAAAA,CAA2B,CACzBI,OAAO,CADkB,CAAA,CAEzBC,QAAQ,CAAE,IAFe,KAAA,CAGzBC,eAAe,CAAE,IAHQ,CAA3BN,EAAAA,KAAAA,GAKD,CARH,CAAA,CAWA,GAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAIf,IAAI,GAAR,WAAA,CAA0B,IAChBU,CAAAA,KADgB,CACNC,KAAK,CAAvB,SADwB,CAChBD,KADgB,CAExBF,QAAQ,CAARA,MAAAA,CAAAA,SAAAA,CAA2B,CACzBI,OAAO,CADkB,CAAA,CAEzBC,QAAQ,CAAE,IAFe,KAAA,CAGzBC,eAAe,CAAE,IAHQ,CAA3BN,EAAAA,KAAAA,GAKD,CARH,CAAA,CAhBW,GA2BL,CAAA,MA3BK,CA2BX,KA3BW,CA2BL,MA3BK,CA2BKQ,SA3BL,CA2BX,KA3BW,CA2BKA,SA3BL,CA4BX,GAAMC,CAAAA,IAAI,CAAGN,KAAK,CAALA,KAAAA,CAAb,MAAA,CAEA,GAAA,CAAA,eAAA,CAAA,WAAA,CAAA,SAAA,CAAA,WAAA,CAEA,GAAIX,IAAI,GAAR,WAAA,CAA0B,CACxB,GAAA,QAAA,CAAc,CACZkB,eAAe,CAAGjB,KAAK,CAACU,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAANV,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAlBiB,MAAkBjB,EAAlBiB,CADF,CAAA,IAKO,IAAA,WAAA,CAAiB,CACtBA,eAAe,CAAfA,WAAAA,CADK,CAAA,IAEA,CACLA,eAAe,CAAGC,MAAM,CAAxBD,OAAAA,CACD,CAVH,CAAA,IAWO,CACLA,eAAe,CAAfA,aAAAA,CACD,CAED,GAAIlB,IAAI,GAAR,UAAA,CAAyB,CACvBoB,WAAW,CAAGnB,KAAK,CAACU,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAANV,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAdmB,MAAcnB,EAAdmB,CAIAC,WAAW,CAAGC,UAAU,CAAxBD,aAAAA,CALF,CAAA,IAMO,CACLD,WAAW,CAAXA,aAAAA,CACAC,WAAW,CAAXA,CAAAA,CACD,CAED,GAAA,QAAA,CAAc,CACZE,SAAS,CAAGtB,KAAK,CAACU,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAANV,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAZsB,MAAYtB,EAAZsB,CADF,CAAA,IAKO,IAAIvB,IAAI,GAAR,WAAA,CAA0B,CAC/B,GAAA,CAAA,MAAA,CAEA,GAAI,MAAA,CAAA,IAAA,GAAJ,SAAA,CAA+B,CAC7BwB,MAAM,CAANA,IAAAA,CADF,CAAA,IAEO,CACLA,MAAM,CACJN,eAAe,GAAfA,aAAAA,CAAAA,KAAAA,CAEI,CAACjB,KAAK,CAALA,eAAK,CAALA,CAHPuB,OAGOvB,EAHPuB,CAID,CAEDD,SAAS,CAAGC,MAAM,CAAA,KAAA,CAAlBD,KAAAA,CAZK,CAAA,IAaA,IAAA,WAAA,CAAiB,CACtBA,SAAS,CAATA,WAAAA,CADK,CAAA,IAEA,CACLA,SAAS,CAAGJ,MAAM,CAAlBI,OAAAA,CACD,CAED,GAAME,CAAAA,WAAW,CAAGxB,KAAK,CAALA,SAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAApB,MAAoBA,EAApB,CACA,GAAMyB,CAAAA,WAAW,CAAG,CAClBR,eADkB,CAClBA,eADkB,CAElBE,WAFkB,CAElBA,WAFkB,CAGlBC,WAHkB,CAGlBA,WAHkB,CAIlBM,YAAY,CAAEX,SAJI,CAApB,CAMA,GAAMY,CAAAA,cAAc,CAAG,CACrBD,YAAY,CAAEE,KAAK,CACfP,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,EAAAA,YAAAA,EADe,SAAA,CAEfN,SAHiB,CAAvB,CAzFW,UAgGTM,UAAU,CAAVA,OAAAA,CAAAA,UAAAA,GADF,EA/FW,CA+FL,gBA/FK,OA+FHrB,KA/FG,CA+FgC8B,eA/FhC,OA+FsBD,QA/FtB,CAkGX,GAAME,CAAAA,SAAS,CAAA,aAAA,CAAA,CAAK/B,KAAK,CAAEsB,SAAZ,CAAA,CAAf,IAAe,CAAf,CACA,GAAMU,CAAAA,YAAY,CAAGC,QAAQ,EAAIlC,IAAI,GAAhBkC,WAAAA,CAAAA,CAAAA,CAArB,SAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAAE,CACLC,MAAM,CADD,MAAA,CAELC,OAAO,EAAID,MAAM,CAFZ,OAAA,CAGL,CAAE7B,SAAS,CAAE2B,YAAb,CAHK,CAAA,WAAA,CAAA,KAAA,CAFT,CAAA,CAAA,CAUE,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,CACE,UAAU,CADZ,IAAA,CAEE,YAAY,CAFd,CAAA,CAGE,OAAO,CAHT,OAAA,CAIE,WAAW,CAJb,WAAA,CAKE,SAAS,CALX,aAAA,CAME,UAAU,CANZ,cAAA,CAOE,kBAAkB,CAPpB,kBAAA,CAQE,mBAAmB,CAAEC,QAAQ,CAAG,CAAA,QAAA,CAAH,UAAG,CAAH,CAR/B,QAAA,CASE,0BAA0B,CAT5B,QAAA,CAUE,iBAAiB,CAVnB,QAAA,CAWE,kBAAkB,CAAE,CAAEA,QAAAA,CAAAA,QAAF,CAXtB,CAYE,QAAQ,CAZV,QAAA,CAaE,WAAW,CAbb,WAAA,CAcE,KAAK,CAdP,cAAA,CAeE,MAAM,CAAE/B,MAfV,CAAA,CAiBE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACgC,MAAM,CAAP,OAAA,CAAA,YAAA,CAAb,CAAA,CACGE,IAAI,EAAIC,OAAO,GAAfD,IAAAA,CACC,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEF,MAAM,CAACE,IAApB,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,MAAM,CADR,IAAA,CAEE,IAAI,CAAEN,eAAe,EAFvB,EAAA,CAGE,KAAK,CAAEQ,gBAAgB,EAAIhB,SAH7B,CAAA,CADF,CADDc,CADH,IAAA,CAUGC,OAAO,CACN,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,CACE,IAAI,CAAEP,eAAe,EADvB,EAAA,CAEE,KAAK,CAAEQ,gBAAgB,EAFzB,SAAA,CAGE,KAAK,CAAEJ,MAAM,CAACE,IAHhB,CAAA,CADM,CAVV,IAAA,CAiBE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,aAAa,CADf,CAAA,CAEE,KAAK,CAAE,CACLF,MAAM,CADD,KAAA,CAELC,OAAO,EAAID,MAAM,CAFZ,YAAA,CAGLjC,SAAS,EAAIiC,MAAM,CAHd,cAAA,CAAA,SAAA,CAAA,IAAA,CAAA,UAAA,CAFT,CAAA,CA7CR,QA6CQ,CAjBF,CAjBF,CAVF,CADF,CAxHF,CAAA,CAwLA,GAAMA,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BK,MAAM,CAAE,CACNC,QAAQ,CADF,EAAA,CAENC,WAAW,CAAE,OAFP,CADuB,CAK/BN,OAAO,CAAE,CACPK,QAAQ,CAAE,MADH,CALsB,CAQ/BE,OAAO,CAAE,CACPC,aAAa,CADN,KAAA,CAEPC,UAAU,CAFH,QAAA,CAGPC,cAAc,CAAE,QAHT,CARsB,CAa/BT,IAAI,CAAE,CACJU,UAAU,CADN,EAAA,CAEJC,WAAW,CAAE,CAAC,CAFV,CAbyB,CAiB/BC,KAAK,CAAE,CACLC,SAAS,CADJ,QAAA,CAELC,aAAa,CAFR,CAAA,CAGLC,cAAc,CAHT,CAAA,CAILC,gBAAgB,CAAE,EAJb,CAjBwB,CAuB/BC,YAAY,CAAE,CACZD,gBAAgB,CAAE,CADN,CAvBiB,CA0B/BE,cAAc,CAAE,CACdC,aAAa,CAAE,WADD,CA1Be,CAAlB,CAAf,CA+BA,cAAeC,CAAAA,SAAS,CAAxB,MAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport ActivityIndicator from './ActivityIndicator';\nimport Icon, { IconSource } from './Icon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport TouchableRipple from './TouchableRipple/TouchableRipple';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Mode of the button. You can change the mode to adjust the styling to give it desired emphasis.\n   * - `text` - flat button without background or outline (low emphasis)\n   * - `outlined` - button with an outline (medium emphasis)\n   * - `contained` - button with a background color and elevation shadow (high emphasis)\n   */\n  mode?: 'text' | 'outlined' | 'contained';\n  /**\n   * Whether the color is a dark color. A dark button will render light text and vice-versa. Only applicable for `contained` mode.\n   */\n  dark?: boolean;\n  /**\n   * Use a compact look, useful for `text` buttons in a row.\n   */\n  compact?: boolean;\n  /**\n   * Custom text color for flat button, or background color for contained button.\n   */\n  color?: string;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Icon to display for the `Button`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Label text of the button.\n   */\n  children: React.ReactNode;\n  /**\n   * Make the label text uppercased. Note that this won't work if you pass React elements as children.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the button text.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A button is component that the user can press to trigger an action.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/button-1.png\" />\n *     <figcaption>Text button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-2.png\" />\n *     <figcaption>Outlined button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-3.png\" />\n *     <figcaption>Contained button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Button = ({\n  disabled,\n  compact,\n  mode = 'text',\n  dark,\n  loading,\n  icon,\n  color: buttonColor,\n  children,\n  uppercase = true,\n  accessibilityLabel,\n  onPress,\n  onLongPress,\n  style,\n  theme,\n  contentStyle,\n  labelStyle,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(mode === 'contained' ? 2 : 0)\n  );\n\n  const handlePressIn = () => {\n    if (mode === 'contained') {\n      const { scale } = theme.animation;\n      Animated.timing(elevation, {\n        toValue: 8,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const handlePressOut = () => {\n    if (mode === 'contained') {\n      const { scale } = theme.animation;\n      Animated.timing(elevation, {\n        toValue: 2,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const { colors, roundness } = theme;\n  const font = theme.fonts.medium;\n\n  let backgroundColor, borderColor, textColor, borderWidth;\n\n  if (mode === 'contained') {\n    if (disabled) {\n      backgroundColor = color(theme.dark ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n    } else if (buttonColor) {\n      backgroundColor = buttonColor;\n    } else {\n      backgroundColor = colors.primary;\n    }\n  } else {\n    backgroundColor = 'transparent';\n  }\n\n  if (mode === 'outlined') {\n    borderColor = color(theme.dark ? white : black)\n      .alpha(0.29)\n      .rgb()\n      .string();\n    borderWidth = StyleSheet.hairlineWidth;\n  } else {\n    borderColor = 'transparent';\n    borderWidth = 0;\n  }\n\n  if (disabled) {\n    textColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else if (mode === 'contained') {\n    let isDark;\n\n    if (typeof dark === 'boolean') {\n      isDark = dark;\n    } else {\n      isDark =\n        backgroundColor === 'transparent'\n          ? false\n          : !color(backgroundColor).isLight();\n    }\n\n    textColor = isDark ? white : black;\n  } else if (buttonColor) {\n    textColor = buttonColor;\n  } else {\n    textColor = colors.primary;\n  }\n\n  const rippleColor = color(textColor).alpha(0.32).rgb().string();\n  const buttonStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    borderRadius: roundness,\n  };\n  const touchableStyle = {\n    borderRadius: style\n      ? StyleSheet.flatten(style).borderRadius || roundness\n      : roundness,\n  };\n\n  const { color: customLabelColor, fontSize: customLabelSize } =\n    StyleSheet.flatten(labelStyle) || {};\n\n  const textStyle = { color: textColor, ...font };\n  const elevationRes = disabled || mode !== 'contained' ? 0 : elevation;\n\n  return (\n    <Surface\n      {...rest}\n      style={[\n        styles.button,\n        compact && styles.compact,\n        { elevation: elevationRes } as ViewStyle,\n        buttonStyle,\n        style,\n      ]}\n    >\n      <TouchableRipple\n        borderless\n        delayPressIn={0}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={handlePressIn}\n        onPressOut={handlePressOut}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ disabled }}\n        disabled={disabled}\n        rippleColor={rippleColor}\n        style={touchableStyle}\n        testID={testID}\n      >\n        <View style={[styles.content, contentStyle]}>\n          {icon && loading !== true ? (\n            <View style={styles.icon}>\n              <Icon\n                source={icon}\n                size={customLabelSize || 16}\n                color={customLabelColor || textColor}\n              />\n            </View>\n          ) : null}\n          {loading ? (\n            <ActivityIndicator\n              size={customLabelSize || 16}\n              color={customLabelColor || textColor}\n              style={styles.icon}\n            />\n          ) : null}\n          <Text\n            numberOfLines={1}\n            style={[\n              styles.label,\n              compact && styles.compactLabel,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n              font,\n              labelStyle,\n            ]}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid',\n  },\n  compact: {\n    minWidth: 'auto',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4,\n  },\n  label: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    marginVertical: 9,\n    marginHorizontal: 16,\n  },\n  compactLabel: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n});\n\nexport default withTheme(Button);\n"]},"metadata":{},"sourceType":"module"}