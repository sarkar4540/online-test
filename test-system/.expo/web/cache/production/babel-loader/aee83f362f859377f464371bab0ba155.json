{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import Icon from\"../Icon\";import{withTheme}from\"../../core/theming\";import{white}from\"../../styles/colors\";var defaultSize=64;var Avatar=function Avatar(_ref){var icon=_ref.icon,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"icon\",\"size\",\"style\",\"theme\"]);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?theme.colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,[\"backgroundColor\"]);var textColor=rest.color||(color(backgroundColor).isLight()?'rgba(0, 0, 0, .54)':white);return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Icon,{source:icon,color:textColor,size:size*0.6}));};Avatar.displayName='Avatar.Icon';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'}});export default withTheme(Avatar);","map":{"version":3,"sources":["AvatarIcon.tsx"],"names":["defaultSize","Avatar","size","theme","rest","backgroundColor","primary","StyleSheet","textColor","color","width","height","borderRadius","styles","container","justifyContent","alignItems","withTheme"],"mappings":"+9BAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAEA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,IAAA,eACA,OAAA,SAAA,0BACA,OAAA,KAAA,2BAGA,GAAMA,CAAAA,WAAW,CAAjB,EAAA,CAyCA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAA,IAAA,CAAgE,IAA/D,CAAA,IAA+D,CAAA,IAAA,CAA/D,IAA+D,WAAA,IAAA,CAAvDC,IAAuD,CAAvDA,IAAuD,oBAA/D,WAA+D,WAA/D,KAA+D,CAAA,IAAA,CAA/D,KAA+D,CAA5BC,KAA4B,CAAA,IAAA,CAA5BA,KAA4B,CAAlBC,IAAkB,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAC7E,GAAA,CAAA,KAAA,CACEG,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GADF,EAAA,uBAAA,KAAA,CAAQF,eAAR,CAAQA,eAAR,gCAA0BF,KAAK,CAALA,MAAAA,CAAaG,OAAvC,uBAAA,SAAA,CAAA,wBAAA,CAAA,KAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,CAEA,GAAME,CAAAA,SAAS,CACbJ,IAAI,CAAJA,KAAAA,GACCK,KAAK,CAALA,eAAK,CAALA,CAAAA,OAAAA,GAAAA,oBAAAA,CAFH,KACEL,CADF,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACL,CACEM,KAAK,CADP,IAAA,CAEEC,MAAM,CAFR,IAAA,CAGEC,YAAY,CAAEV,IAAI,CAHpB,CAAA,CAIEG,eAAAA,CAAAA,eAJF,CADK,CAOLQ,MAAM,CAPD,SAAA,CAAA,SAAA,CADT,CAAA,CAAA,IAAA,CAAA,CAaE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,MAAM,CAAZ,IAAA,CAAoB,KAAK,CAAzB,SAAA,CAAsC,IAAI,CAAEX,IAAI,CAAG,GAAnD,CAAA,CAbF,CADF,CAPF,CAAA,CA0BAD,MAAM,CAANA,WAAAA,CAAAA,aAAAA,CAEA,GAAMY,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,cAAc,CADL,QAAA,CAETC,UAAU,CAAE,QAFH,CADoB,CAAlB,CAAf,CAOA,cAAeC,CAAAA,SAAS,CAAxB,MAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\nimport Icon from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport type { IconSource } from './../Icon';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ||\n    (color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Avatar);\n"]},"metadata":{},"sourceType":"module"}