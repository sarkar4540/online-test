{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Color from'color';import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";import{white}from\"../../styles/colors\";var defaultSize=64;var AvatarText=function AvatarText(_ref){var label=_ref.label,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,theme=_ref.theme,labelStyle=_ref.labelStyle,color=_ref.color,rest=_objectWithoutProperties(_ref,[\"label\",\"size\",\"style\",\"theme\",\"labelStyle\",\"color\"]);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?theme.colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,[\"backgroundColor\"]);var textColor=color||(Color(backgroundColor).isLight()?'rgba(0, 0, 0, .54)':white);return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Text,{style:[styles.text,{color:textColor,fontSize:size/2,lineHeight:size},labelStyle],numberOfLines:1},label));};AvatarText.displayName='Avatar.Text';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'},text:{textAlign:'center',textAlignVertical:'center'}});export default withTheme(AvatarText);","map":{"version":3,"sources":["AvatarText.tsx"],"names":["defaultSize","AvatarText","size","color","rest","backgroundColor","theme","primary","StyleSheet","textColor","Color","width","height","borderRadius","styles","fontSize","lineHeight","container","justifyContent","alignItems","text","textAlign","textAlignVertical","withTheme"],"mappings":"+9BAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAQA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,IAAA,0BACA,OAAA,SAAA,0BACA,OAAA,KAAA,2BAEA,GAAMA,CAAAA,WAAW,CAAjB,EAAA,CAgDA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAA,IAAA,CAQN,IARO,CAAA,KAQP,CAAA,IAAA,CARO,KAQP,WAAA,IAAA,CANXC,IAMW,CANXA,IAMW,oBARO,WAQP,WARO,KAQP,CAAA,IAAA,CARO,KAQP,CARO,KAQP,CAAA,IAAA,CARO,KAQP,CARO,UAQP,CAAA,IAAA,CARO,UAQP,CAFXC,KAEW,CAAA,IAAA,CAFXA,KAEW,CADRC,IACQ,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,CAAA,CACX,GAAA,CAAA,KAAA,CACEI,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GADF,EAAA,uBAAA,KAAA,CAAQH,eAAR,CAAQA,eAAR,gCAA0BC,KAAK,CAALA,MAAAA,CAAaC,OAAvC,uBAAA,SAAA,CAAA,wBAAA,CAAA,KAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,CAEA,GAAME,CAAAA,SAAS,CACbN,KAAK,GAAKO,KAAK,CAALA,eAAK,CAALA,CAAAA,OAAAA,GAAAA,oBAAAA,CADZ,KACO,CADP,CAGA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACL,CACEC,KAAK,CADP,IAAA,CAEEC,MAAM,CAFR,IAAA,CAGEC,YAAY,CAAEX,IAAI,CAHpB,CAAA,CAIEG,eAAAA,CAAAA,eAJF,CADK,CAOLS,MAAM,CAPD,SAAA,CAAA,SAAA,CADT,CAAA,CAAA,IAAA,CAAA,CAaE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CACLA,MAAM,CADD,IAAA,CAEL,CACEX,KAAK,CADP,SAAA,CAEEY,QAAQ,CAAEb,IAAI,CAFhB,CAAA,CAGEc,UAAU,CAAEd,IAHd,CAFK,CADT,UACS,CADT,CAUE,aAAa,CAAE,CAVjB,CAAA,CAdJ,KAcI,CAbF,CADF,CAdF,CAAA,CA8CAD,UAAU,CAAVA,WAAAA,CAAAA,aAAAA,CAEA,GAAMa,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BG,SAAS,CAAE,CACTC,cAAc,CADL,QAAA,CAETC,UAAU,CAAE,QAFH,CADoB,CAK/BC,IAAI,CAAE,CACJC,SAAS,CADL,QAAA,CAEJC,iBAAiB,CAAE,QAFf,CALyB,CAAlB,CAAf,CAWA,cAAeC,CAAAA,SAAS,CAAxB,UAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport Color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  theme,\n  labelStyle,\n  color,\n  ...rest\n}: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    color || (Color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Text\n        style={[\n          styles.text,\n          {\n            color: textColor,\n            fontSize: size / 2,\n            lineHeight: size,\n          },\n          labelStyle,\n        ]}\n        numberOfLines={1}\n      >\n        {label}\n      </Text>\n    </View>\n  );\n};\n\nAvatarText.displayName = 'Avatar.Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default withTheme(AvatarText);\n"]},"metadata":{},"sourceType":"module"}