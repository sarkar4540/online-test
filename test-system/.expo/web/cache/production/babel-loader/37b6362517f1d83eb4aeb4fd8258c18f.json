{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import AppRegistry from\"react-native-web/dist/exports/AppRegistry\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{Avatar,Button,DefaultTheme,Text,Modal,Portal,Provider as PaperProvider,Snackbar,TextInput,ActivityIndicator,Appbar,Surface,Title,Caption,Subheading,Paragraph,RadioButton,Checkbox}from'react-native-paper';import WebView from'react-native-webview';import{name as appName}from\"./app.json\";import magnox_logo from\"./assets/magnox.png\";var API_URI=\"\";var theme=_objectSpread(_objectSpread({},DefaultTheme),{},{roundness:2,colors:_objectSpread(_objectSpread({},DefaultTheme.colors),{},{placeholder:\"#42c5f5\",primary:\"#42c5f5\",surface:\"#42c5f5\",accent:'#f1c40f'})});var styles=Platform.select({web:StyleSheet.create({login:{flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",flex:1},loginPasscodeContainer:{paddingLeft:50,paddingRight:50,paddingTop:250,flexDirection:\"column\",justifyContent:\"center\",flex:1,width:640},loginButton:{marginTop:10},loginButtonContent:{height:50},loginButtonText:{color:\"#ffffff\"},loginLogo:{width:250,height:250,resizeMode:\"contain\"},loginLogoContainer:{alignItems:\"center\"},error:{flexDirection:\"row\",backgroundColor:\"#f00\",width:640,alignSelf:\"center\"},errorText:{color:\"#fff\",flex:1},testLogo:{width:240,height:100,resizeMode:\"cover\"},test:{flexDirection:\"column\",flex:1},testContainer:{flexDirection:\"row\"},testCanDetails:{margin:10,flex:1,padding:10},testDetails:{margin:10,flex:2,padding:10},top:{backgroundColor:\"#efefef\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",padding:5},testSections:{flexDirection:\"row\",alignSelf:\"stretch\",backgroundColor:\"#ffffe0\",margin:10},testSection:{margin:10},testInstructions:{alignSelf:\"stretch\",backgroundColor:\"#e0ffef\",alignContent:\"stretch\",margin:10,padding:5},testTitle:{textAlign:\"center\"},testInfo:{flexDirection:\"row\",justifyContent:\"space-evenly\",margin:10,backgroundColor:\"#e0efff\"},testEntry:{alignItems:\"center\",padding:10,margin:10},runTestContainer:{flex:1,flexDirection:\"row\"},question:{alignSelf:\"flex-start\",padding:50,flex:3,margin:10,fontSize:25},questionT1:{padding:20},questionT2:{padding:20},questionT3:{padding:20},runTestControls:{backgroundColor:\"#efefef\",flexDirection:\"row\",justifyContent:\"space-evenly\",padding:10},runTestQIndicesContainer:{backgroundColor:\"#e0efff\",margin:10,flex:1},runTestQIndices:{padding:10,flexDirection:\"row\",flexWrap:\"wrap\",justifyContent:\"space-between\"}}),default:StyleSheet.create({login:{flexDirection:\"column\",alignItems:\"stretch\",justifyContent:\"center\",flex:1},loginPasscodeContainer:{paddingLeft:50,paddingRight:50,paddingTop:250,flexDirection:\"column\",justifyContent:\"center\",flex:1},loginButton:{marginTop:10},loginButtonContent:{height:50},loginButtonText:{color:\"#ffffff\"},loginLogo:{width:250,height:250,resizeMode:\"contain\"},loginLogoContainer:{alignItems:\"center\"},error:{flexDirection:\"row\",backgroundColor:\"#f00\"},errorText:{color:\"#fff\",flex:1},testLogo:{width:240,height:100,resizeMode:\"cover\"},test:{flexDirection:\"column\",flex:1},testCanDetails:{margin:10}})});var Main=function(_React$Component){_inherits(Main,_React$Component);var _super=_createSuper(Main);function Main(props){var _this;_classCallCheck(this,Main);_this=_super.call(this,props);_this._state={login:{passcode:\"\"},test:{\"runtest_can\":{\"id\":14,\"test_pub_id\":\"8\",\"can_id\":\"60\",\"pswd\":\"279684\",\"test_start_flag\":true,\"test_end_flag\":false,\"present_ques_id\":\"119\",\"create_date_time\":\"2020-12-15T12:45:59.000Z\",\"entry_date_time\":\"2020-12-15T12:22:14.000Z\",\"sec_id\":\"6\",\"test_start_dttm\":\"2020-12-15T12:22:14.000Z\",\"test_end_dttm\":\"2020-12-15T13:22:14.000Z\"},\"user_details\":{\"id\":\"60\",\"first_name\":\"Aniruddha\",\"last_name\":\"Sarkar\",\"photo_sm\":null,\"photo_lg\":null,\"dateofbirth\":\"1998-01-03T18:30:00.000Z\",\"gender\":\"M\",\"maritalstatus\":null,\"email\":\"sarkar4540@gmail.com\",\"alt_email\":null,\"phone\":\"7548950804\",\"alt_phone\":null,\"bloodgroup\":null,\"aadhar_no\":null,\"website\":null,\"address\":null,\"pin\":null,\"facebook_link\":null,\"linkedin_link\":null,\"google_link\":null,\"mothertongue_id\":null,\"about_me\":null,\"resume_heading\":null,\"expected_ctc\":null,\"caste\":null,\"physical_challenge\":null,\"percentage_ph\":null,\"passport_no\":null,\"organization\":null,\"designation\":null,\"mothers_name\":null,\"mothers_occupation\":null,\"created_date_time\":\"2020-11-28T06:16:45.000Z\",\"modified_date_time\":null,\"city_id\":null},\"test_pub\":{\"id\":8,\"test_id\":\"5\",\"org_id\":null,\"user_id\":\"58\",\"publish_type\":\"1\",\"start_datetm\":null,\"create_date_time\":\"2020-12-03T14:08:29.000Z\",\"modified_date_time\":null,\"end_datetm\":null,\"testc\":null,\"tp_archive\":false},\"test\":{\"id\":5,\"cat_id\":\"21\",\"user_id\":\"58\",\"title\":\"College Test\",\"details\":\"<p>Write the Test Carefully <br></p>\",\"admin_flag\":true,\"duration\":60,\"archive_status\":false,\"hint_display_status\":null,\"create_date_time\":\"2020-12-02T11:24:25.000Z\",\"modified_date_time\":null,\"scat_id\":\"0\",\"marks\":40,\"publish\":true},\"program\":{\"id\":21,\"code\":\"TEST001                                           \",\"title\":\"Nayarozgar\",\"type\":\"2                                                                                                   \",\"category\":\"Corporate Program                                                                                   \",\"duration\":\"12                                                                                                  \",\"start_date\":\"2020-11-26T18:30:00.000Z\",\"end_date\":\"2021-11-10T18:30:00.000Z\",\"user_id\":\"58\",\"status\":\"approved                                                                                            \",\"total_fee\":\"                                                                                                    \",\"total_credit\":\"                                                                                                                                                      \",\"why_learn\":null,\"intro_video_link\":null,\"overview\":\"\",\"requirements\":null,\"curriculam\":\"\",\"selection_procedure\":\"\",\"program_brochure\":null,\"contact_info\":null,\"certificate_sample\":null,\"statusch_date\":\"2020-11-27T08:56:16.000Z\",\"date_added\":\"2020-11-27T08:13:57.000Z\",\"last_updated\":null,\"email\":\"himadri@cyanberg.com\",\"mobile\":\"9901072124\",\"facebook\":null,\"linkedin\":null,\"twitter\":null,\"student_enroll\":0,\"teacher_enroll\":0,\"fee_details\":null,\"banner\":null,\"lastdate_apply\":null,\"dtype\":\"month\",\"feetype\":\"Paid\"},\"course\":null},loading:false,error:false,testEntryTimeLeft:null,testEndTimeLeft:null,testEnded:false,run_test:null,runTestIndex:0};_this.state=_this._state;return _this;}_createClass(Main,[{key:\"get\",value:function get(){var _this2=this;var uri=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var body=arguments.length>1?arguments[1]:undefined;var cb=arguments.length>2?arguments[2]:undefined;this.setState({loading:true});fetch(API_URI+\"/\"+uri,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:body?JSON.stringify(body):\"{}\"}).then(function(res){if(res.status==200){res.json().then(function(json){if(cb)cb(json);}).catch(function(err){_this2.setState(_objectSpread(_objectSpread({},_this2.state),{},{error:err.message}));console.log(err);});}else{res.json().then(function(json){_this2.setState({error:json.message});}).catch(function(err){_this2.setState({error:\"Error networking!\"});console.log(err);});}}).catch(function(err){_this2.setState({error:err.message});console.log(err);}).finally(function(){_this2.setState({loading:false});});}},{key:\"getTest\",value:function getTest(){var _this3=this;this.get(\"test_info\",{passcode:this.state.login.passcode},function(test){if(test.runtest_can){_this3.setState({test:test,error:null,login:null});if(test.runtest_can.test_end_dttm){var test_end_dttm=new Date(test.runtest_can.test_end_dttm);var timer=setInterval(function(){if(_this3.state.run_test){clearInterval(timer);}else if(test_end_dttm.getTime()>_this3.now()){_this3.setState({testEnded:false,testEndTimeLeft:_this3.timeDiff(test_end_dttm)});}else{_this3.setState({testEnded:true});clearInterval(timer);}},1000);}}else{_this3.setState({error:\"Invalid passcode\"});}});}},{key:\"runTest\",value:function runTest(){var _this4=this;this.get(\"run_test\",{passcode:this.state.test.runtest_can.pswd},function(run_test){if(run_test.success){var test_end_dttm=new Date(run_test.runtest_can.test_end_dttm);var timer=setInterval(function(){if(test_end_dttm.getTime()>_this4.now()&&_this4.state.run_test&&!_this4.state.testEnded){_this4.setState({testEnded:false,testEndTimeLeft:_this4.timeDiff(test_end_dttm)});}else{_this4.setState({testEnded:true});_this4.saveAnswerAndFinish();clearInterval(timer);}},1000);_this4.setState({run_test:run_test,error:null});}else _this4.setState({error:run_test.message?run_test.message:\"Some error occurred!\"});});}},{key:\"saveAnswerAndShow\",value:function saveAnswerAndShow(question_index){var _this5=this;this.get(\"save_answer\",this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id==2?{passcode:this.state.run_test.runtest_can.pswd,run_test_id:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,run_test_option_id:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option,present_ques_id:question_index}:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id==3?{passcode:this.state.run_test.runtest_can.pswd,run_test_id:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,run_test_option_ids:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options,present_ques_id:question_index}:{passcode:this.state.run_test.runtest_can.pswd,run_test_id:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,answer_body:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body,present_ques_id:question_index},function(response){if(response.success){var run_test=_this5.state.run_test;run_test.runtest_can.present_ques_id=question_index;_this5.setState({run_test:run_test});}else{_this5.setState({error:response.message});}});}},{key:\"saveAnswerAndFinish\",value:function saveAnswerAndFinish(){var _this6=this;this.get(\"save_answer\",this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id==2?{passcode:this.state.run_test.runtest_can.pswd,run_test_id:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,run_test_option_id:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option,present_ques_id:this.state.run_test.runtest_can.present_ques_id}:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id==3?{passcode:this.state.run_test.runtest_can.pswd,run_test_id:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,run_test_option_ids:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options,present_ques_id:this.state.run_test.runtest_can.present_ques_id}:{passcode:this.state.run_test.runtest_can.pswd,run_test_id:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,answer_body:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body,present_ques_id:this.state.run_test.runtest_can.present_ques_id},function(response){if(response.success){_this6.get(\"finish_test\",{passcode:_this6.state.run_test.runtest_can.pswd},function(response2){if(response2.success){_this6.setState({run_test:null,testEnded:true});}else _this6.setState({error:response2.message});});}else{_this6.setState({error:response.message});}});}},{key:\"render\",value:function render(){var _this7=this;return React.createElement(PaperProvider,null,React.createElement(StatusBar,null),React.createElement(Portal,null,React.createElement(Modal,{dismissable:false,visible:this.state.loading,theme:theme},React.createElement(ActivityIndicator,null))),this.state.login?React.createElement(View,{style:styles.login,theme:theme},React.createElement(View,{style:styles.loginPasscodeContainer},React.createElement(TextInput,{label:\"Passcode\",style:styles.loginPasscode,value:this.state.login.passcode,mode:\"outlined\",secureTextEntry:true,theme:theme,onChangeText:function onChangeText(text){_this7.setState({login:_objectSpread(_objectSpread({},_this7.state.login),{},{passcode:text})});},onSubmitEditing:this.getTest.bind(this)}),React.createElement(Button,{style:styles.loginButton,contentStyle:styles.loginButtonContent,labelStyle:styles.loginButtonText,mode:\"contained\",color:\"#42c5f5\",onPress:this.getTest.bind(this),disabled:this.state.loading},\"Continue\")),React.createElement(View,{style:styles.loginLogoContainer},React.createElement(Image,{style:styles.loginLogo,source:magnox_logo}))):this.state.test?React.createElement(View,{style:styles.test},React.createElement(Surface,{style:styles.top},React.createElement(Image,{style:styles.testLogo,source:magnox_logo}),this.state.run_test?React.createElement(View,null,React.createElement(Caption,null,\"Time left to end\"),React.createElement(Title,null,this.state.testEndTimeLeft)):null,this.state.run_test?React.createElement(Button,{style:styles.loginButton,contentStyle:styles.loginButtonContent,labelStyle:styles.loginButtonText,mode:\"contained\",color:\"#42c5f5\",onPress:function onPress(){return _this7.saveAnswerAndFinish();}},\"Exit\"):React.createElement(Button,{style:styles.loginButton,contentStyle:styles.loginButtonContent,labelStyle:styles.loginButtonText,mode:\"contained\",color:\"#42c5f5\",onPress:function onPress(){return _this7.setState(_this7._state);}},\"Exit\")),!this.state.run_test?React.createElement(View,{style:styles.testContainer},React.createElement(Surface,{style:styles.testCanDetails},React.createElement(Caption,null,\"Name\"),React.createElement(Title,null,this.state.test.user_details.first_name,\"\\xA0\",this.state.test.user_details.last_name),React.createElement(Caption,null,\"Email\"),React.createElement(Subheading,null,this.state.test.user_details.email),React.createElement(Caption,null,\"Phone\"),React.createElement(Subheading,null,this.state.test.user_details.phone),React.createElement(Caption,null,\"Program\"),React.createElement(Subheading,null,this.state.test.program.title),this.state.test.course?React.createElement(View,null,React.createElement(Caption,null,\"Course\"),React.createElement(Subheading,null,this.state.test.course.title,\"\\xA0\")):null),React.createElement(Surface,{style:styles.testDetails},React.createElement(Title,{style:styles.testTitle},this.state.test.test.title),React.createElement(Surface,{style:styles.testInfo},this.state.test.test_pub.publish_type==1?React.createElement(View,null,React.createElement(Caption,null,\"Start Time\"),React.createElement(Subheading,null,\"Any\")):this.state.test.test_pub.publish_type==2?React.createElement(View,null,React.createElement(Caption,null,\"Start Time\"),React.createElement(Subheading,null,this.state.test.test_pub.start_datetm)):React.createElement(View,null,React.createElement(Caption,null,\"Start Time\"),React.createElement(Subheading,null,\"from \",this.state.test.test_pub.start_datetm,\" to \",this.state.test.test_pub.end_datetm)),React.createElement(View,null,React.createElement(Caption,null,\"Duration\"),React.createElement(Subheading,null,this.state.test.test.duration,\"\\xA0Minutes\"))),React.createElement(Surface,{style:styles.testSections},this.state.test.sections.map(function(section){return React.createElement(View,{style:styles.testSection},React.createElement(Caption,null,section.section_name),React.createElement(Subheading,null,section.count,\"\\xA0 Questions\"));})),React.createElement(Surface,{style:styles.testInstructions},React.createElement(Subheading,null,\"Instructions\"),Platform.OS==='web'?React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:this.state.test.test.details}}):React.createElement(WebView,{source:{html:this.state.test.test.details},style:{marginTop:20}})),this.state.test.runtest_can.test_start_flag?React.createElement(Surface,{style:styles.testEntry},React.createElement(View,null,React.createElement(Caption,null,\"Test attempted at\"),React.createElement(Title,null,this.then(this.state.test.runtest_can.test_start_dttm))),this.state.testEnded?React.createElement(View,null,React.createElement(Caption,null,\"Test ended at\"),React.createElement(Title,null,this.then(this.state.test.runtest_can.test_end_dttm))):React.createElement(View,null,React.createElement(Caption,null,\"Time left to end\"),React.createElement(Title,null,this.state.testEndTimeLeft),React.createElement(Button,{style:styles.loginButton,contentStyle:styles.loginButtonContent,labelStyle:styles.loginButtonText,mode:\"contained\",color:\"#42c5f5\",onPress:this.runTest.bind(this)},\"Re-enter\"))):React.createElement(Surface,{style:styles.testEntry},this.state.testEntryTimeLeft?React.createElement(View,null,React.createElement(Caption,null,\"Time left to start\"),React.createElement(Title,null,this.state.testEntryTimeLeft)):this.state.test.test_pub.publish_type!=1&&new Date(this.state.test.test_pub.end_datetm).getTime()<this.now()?React.createElement(View,null,React.createElement(Caption,null,\"Time to attempt test is over at\"),React.createElement(Title,null,this.state.test.test_pub.end_datetm)):React.createElement(Button,{style:styles.loginButton,contentStyle:styles.loginButtonContent,labelStyle:styles.loginButtonText,mode:\"contained\",color:\"#42c5f5\",onPress:function onPress(){var start_datetm=_this7.state.test.test_pub.publish_type==1?new Date(_this7.now()):new Date(_this7.state.test.test_pub.start_datetm);var timer=setInterval(function(){if(start_datetm.getTime()<_this7.now()){clearInterval(timer);_this7.get(\"start_test\",{passcode:_this7.state.test.runtest_can.pswd},function(response){if(response.success){_this7.runTest.bind(_this7)();_this7.setState({error:null,testEntryTimeLeft:null});}else _this7.setState({error:response.message?response.message:\"Some error occurred!\",testEntryTimeLeft:null});});}else{_this7.setState({testEntryTimeLeft:_this7.timeDiff(start_datetm)});}},1000);}},\"Continue\")))):React.createElement(View,{style:styles.runTestContainer},this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id]?React.createElement(Surface,{style:styles.question},React.createElement(Subheading,null,\"Question \",this.state.run_test.runtest_can.present_ques_id+1,\" of \",this.state.run_test.questions.length),Platform.OS==='web'?React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].qbody}}):React.createElement(WebView,{source:{html:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].qbody}}),this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id==2?React.createElement(RadioButton.Group,{value:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option,onValueChange:function onValueChange(val){var run_test=_this7.state.run_test;run_test.questions[_this7.state.run_test.runtest_can.present_ques_id].selected_option=val;run_test.questions[_this7.state.run_test.runtest_can.present_ques_id].status=1;_this7.setState({run_test:run_test});},style:styles.questionT2},this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].options.map(function(option){return React.createElement(RadioButton.Item,{label:Platform.OS==='web'?React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:option.body}}):React.createElement(WebView,{source:{html:option.body}}),value:option.id});})):this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id==3?React.createElement(View,{style:styles.questionT3},this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].options.map(option,function(index){return React.createElement(Checkbox.Item,{label:Platform.OS==='web'?React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:option.body}}):React.createElement(WebView,{source:{html:option.body}}),onPress:function onPress(){var run_test=_this7.state.run_test;if(option.id in run_test.questions[run_test.runtest_can.present_ques_id].selected_options){run_test.questions[run_test.runtest_can.present_ques_id].selected_options=run_test.questions[run_test.runtest_can.present_ques_id].selected_options.filter(function(e){return e!=option.id;});}else{run_test.questions[run_test.runtest_can.present_ques_id].selected_options.push(option.id);}run_test.questions[run_test.runtest_can.present_ques_id].status=1;_this7.setState({run_test:run_test});},status:option.id in _this7.state.run_test.questions[_this7.state.run_test.runtest_can.present_ques_id].selected_options?'checked':'unchecked'});})):React.createElement(TextInput,{multiline:true,label:\"Answer\",style:styles.questionT1,value:this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body,onChangeText:function onChangeText(text){var run_test=_this7.state.run_test;run_test.questions[run_test.runtest_can.present_ques_id].ans_body=text;run_test.questions[run_test.runtest_can.present_ques_id].status=1;_this7.setState({run_test:run_test});}}),React.createElement(Surface,{style:styles.runTestControls},React.createElement(Button,{style:styles.loginButton,contentStyle:styles.loginButtonContent,labelStyle:styles.loginButtonText,mode:\"contained\",color:\"#42c5f5\",onPress:function onPress(){return _this7.saveAnswerAndShow((parseInt(_this7.state.run_test.runtest_can.present_ques_id)-1)%_this7.state.run_test.questions.length);}},\"Previous\"),React.createElement(Button,{style:styles.loginButton,contentStyle:styles.loginButtonContent,labelStyle:styles.loginButtonText,mode:\"contained\",color:\"#42c5f5\",onPress:function onPress(){var run_test=_this7.state.run_test;if(run_test.questions[run_test.runtest_can.present_ques_id].type_id==2){run_test.questions[run_test.runtest_can.present_ques_id].selected_option=0;}else if(run_test.questions[run_test.runtest_can.present_ques_id].type_id==3){run_test.questions[run_test.runtest_can.present_ques_id].selected_options=[];}else{run_test.questions[run_test.runtest_can.present_ques_id].ans_body=null;}run_test.questions[run_test.runtest_can.present_ques_id].status=0;_this7.setState({run_test:run_test});}},\"Clear\"),React.createElement(Button,{style:styles.loginButton,contentStyle:styles.loginButtonContent,labelStyle:styles.loginButtonText,mode:\"contained\",color:\"#42c5f5\",onPress:function onPress(){if(_this7.state.run_test.runtest_can.present_ques_id==_this7.state.run_test.questions.length-1)_this7.saveAnswerAndFinish();else _this7.saveAnswerAndShow((parseInt(_this7.state.run_test.runtest_can.present_ques_id)+1)%_this7.state.run_test.questions.length);}},this.state.run_test.runtest_can.present_ques_id==this.state.run_test.questions.length-1?\"Finish\":\"Next\"))):null,React.createElement(Surface,{style:styles.runTestQIndicesContainer},React.createElement(ScrollView,null,React.createElement(View,{style:styles.runTestQIndices},this.state.run_test.questions.map(function(question,index){return React.createElement(TouchableOpacity,{style:{margin:5},onPress:function onPress(){return _this7.saveAnswerAndShow(index);}},React.createElement(Avatar.Text,{style:{backgroundColor:_this7.state.run_test.runtest_can.present_ques_id==index?\"#42c5f5\":question.status==0?\"#ff5050\":\"#50ff50\"},size:50,label:index+1}));})))))):null,React.createElement(Snackbar,{visible:this.state.error,onDismiss:function onDismiss(){_this7.setState({error:false});},style:styles.error,action:{label:'Close',onPress:function onPress(){return _this7.setState({error:false});}},theme:theme},React.createElement(Text,{style:styles.errorText},this.state.error)));}},{key:\"timeDiff\",value:function timeDiff(date){var diff=new Date(date.getTime()-this.now());return(diff.getUTCMonth()?diff.getUTCMonth()+\" month(s) \":\"\")+(diff.getUTCDate()-1>0?diff.getUTCDate()-1+\" day(s) \":\"\")+(diff.getUTCHours()?diff.getUTCHours()+\" hour(s) \":\"\")+(diff.getUTCMinutes()?diff.getUTCMinutes()+\" minute(s) \":\"\")+(diff.getUTCSeconds()?diff.getUTCSeconds()+\" second(s) \":\"\");}},{key:\"now\",value:function now(){var curdate=new Date();return curdate.getTime()+curdate.getTimezoneOffset()*60000;}},{key:\"then\",value:function then(date_str){var date=new Date(date_str);date=new Date(date.getTime()-date.getTimezoneOffset()*60000);return date.getFullYear()+\"-\"+(date.getMonth()+1)+\"-\"+date.getDate()+\" \"+date.getHours()+\":\"+date.getMinutes()+\":\"+date.getSeconds();}}]);return Main;}(React.Component);export{Main as default};AppRegistry.registerComponent(appName,function(){return Main;});","map":{"version":3,"sources":["/home/sarkar4540/Code/sarkar nigam/magnox/test-system/App.js"],"names":["React","Avatar","Button","DefaultTheme","Text","Modal","Portal","Provider","PaperProvider","Snackbar","TextInput","ActivityIndicator","Appbar","Surface","Title","Caption","Subheading","Paragraph","RadioButton","Checkbox","WebView","name","appName","magnox_logo","API_URI","theme","roundness","colors","placeholder","primary","surface","accent","styles","Platform","select","web","StyleSheet","create","login","flexDirection","alignItems","justifyContent","flex","loginPasscodeContainer","paddingLeft","paddingRight","paddingTop","width","loginButton","marginTop","loginButtonContent","height","loginButtonText","color","loginLogo","resizeMode","loginLogoContainer","error","backgroundColor","alignSelf","errorText","testLogo","test","testContainer","testCanDetails","margin","padding","testDetails","top","testSections","testSection","testInstructions","alignContent","testTitle","textAlign","testInfo","testEntry","runTestContainer","question","fontSize","questionT1","questionT2","questionT3","runTestControls","runTestQIndicesContainer","runTestQIndices","flexWrap","default","Main","props","_state","passcode","loading","testEntryTimeLeft","testEndTimeLeft","testEnded","run_test","runTestIndex","state","uri","body","cb","setState","fetch","method","headers","JSON","stringify","then","res","status","json","catch","err","message","console","log","finally","get","runtest_can","test_end_dttm","Date","timer","setInterval","clearInterval","getTime","now","timeDiff","pswd","success","saveAnswerAndFinish","question_index","questions","present_ques_id","type_id","run_test_id","id","run_test_option_id","selected_option","run_test_option_ids","selected_options","answer_body","ans_body","response","response2","loginPasscode","text","getTest","bind","user_details","first_name","last_name","email","phone","program","title","course","test_pub","publish_type","start_datetm","end_datetm","duration","sections","map","section","section_name","count","OS","__html","details","html","test_start_flag","test_start_dttm","runTest","length","qbody","val","options","option","index","filter","e","push","saveAnswerAndShow","parseInt","label","onPress","date","diff","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","curdate","getTimezoneOffset","date_str","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Component","AppRegistry","registerComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { AppRegistry, Platform, StyleSheet, View, Image, StatusBar, TouchableOpacity, ScrollView } from 'react-native';\nimport { Avatar, Button, DefaultTheme, Text, Modal, Portal, Provider as PaperProvider, Snackbar, TextInput, ActivityIndicator, Appbar, Surface, Title, Caption, Subheading, Paragraph, RadioButton, Checkbox } from 'react-native-paper';\nimport WebView from 'react-native-webview';\nimport { name as appName } from './app.json';\nimport magnox_logo from './assets/magnox.png';\n\nconst API_URI = \"\";\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    placeholder: \"#42c5f5\", primary: \"#42c5f5\",\n    surface: \"#42c5f5\",\n    accent: '#f1c40f',\n  },\n};\n\nconst styles = Platform.select({\n  web: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: 640\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n      width: 640,\n      alignSelf: \"center\"\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    },\n    testLogo: {\n      width: 240,\n      height: 100,\n      resizeMode: \"cover\"\n    },\n    test: {\n      flexDirection: \"column\",\n      flex: 1\n    },\n    testContainer: {\n      flexDirection: \"row\"\n    },\n    testCanDetails: {\n      margin: 10,\n      flex: 1,\n      padding: 10\n    },\n    testDetails: {\n      margin: 10,\n      flex: 2,\n      padding: 10\n    },\n    top: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: 5\n    },\n    testSections: {\n      flexDirection: \"row\",\n      alignSelf: \"stretch\",\n      backgroundColor: \"#ffffe0\",\n      margin: 10\n    },\n    testSection: {\n      margin: 10\n    },\n    testInstructions: {\n      alignSelf: \"stretch\",\n      backgroundColor: \"#e0ffef\",\n      alignContent: \"stretch\",\n      margin: 10,\n      padding: 5\n    },\n    testTitle: {\n      textAlign: \"center\",\n    },\n    testInfo: {\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      margin: 10,\n      backgroundColor: \"#e0efff\"\n    },\n    testEntry: {\n      alignItems: \"center\",\n      padding: 10,\n      margin: 10\n    },\n    runTestContainer: {\n      flex: 1,\n      flexDirection: \"row\",\n    },\n    question: {\n      alignSelf: \"flex-start\",\n      padding: 50,\n      flex: 3,\n      margin: 10,\n      fontSize: 25\n    },\n    questionT1: {\n      padding: 20\n    },\n    questionT2: {\n      padding: 20\n    },\n    questionT3: {\n      padding: 20\n    },\n    runTestControls: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      padding: 10\n    },\n    runTestQIndicesContainer: {\n      backgroundColor: \"#e0efff\",\n      margin: 10,\n      flex: 1\n    },\n    runTestQIndices: {\n      padding: 10,\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\"\n    }\n  }),\n  default: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"stretch\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    },\n    testLogo: {\n      width: 240,\n      height: 100,\n      resizeMode: \"cover\"\n    },\n    test: {\n      flexDirection: \"column\",\n      flex: 1\n    },\n    testCanDetails: {\n      margin: 10\n    }\n  })\n});\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._state = {\n      login: {\n        passcode: \"\",\n      },\n      test: { \"runtest_can\": { \"id\": 14, \"test_pub_id\": \"8\", \"can_id\": \"60\", \"pswd\": \"279684\", \"test_start_flag\": true, \"test_end_flag\": false, \"present_ques_id\": \"119\", \"create_date_time\": \"2020-12-15T12:45:59.000Z\", \"entry_date_time\": \"2020-12-15T12:22:14.000Z\", \"sec_id\": \"6\", \"test_start_dttm\": \"2020-12-15T12:22:14.000Z\", \"test_end_dttm\": \"2020-12-15T13:22:14.000Z\" }, \"user_details\": { \"id\": \"60\", \"first_name\": \"Aniruddha\", \"last_name\": \"Sarkar\", \"photo_sm\": null, \"photo_lg\": null, \"dateofbirth\": \"1998-01-03T18:30:00.000Z\", \"gender\": \"M\", \"maritalstatus\": null, \"email\": \"sarkar4540@gmail.com\", \"alt_email\": null, \"phone\": \"7548950804\", \"alt_phone\": null, \"bloodgroup\": null, \"aadhar_no\": null, \"website\": null, \"address\": null, \"pin\": null, \"facebook_link\": null, \"linkedin_link\": null, \"google_link\": null, \"mothertongue_id\": null, \"about_me\": null, \"resume_heading\": null, \"expected_ctc\": null, \"caste\": null, \"physical_challenge\": null, \"percentage_ph\": null, \"passport_no\": null, \"organization\": null, \"designation\": null, \"mothers_name\": null, \"mothers_occupation\": null, \"created_date_time\": \"2020-11-28T06:16:45.000Z\", \"modified_date_time\": null, \"city_id\": null }, \"test_pub\": { \"id\": 8, \"test_id\": \"5\", \"org_id\": null, \"user_id\": \"58\", \"publish_type\": \"1\", \"start_datetm\": null, \"create_date_time\": \"2020-12-03T14:08:29.000Z\", \"modified_date_time\": null, \"end_datetm\": null, \"testc\": null, \"tp_archive\": false }, \"test\": { \"id\": 5, \"cat_id\": \"21\", \"user_id\": \"58\", \"title\": \"College Test\", \"details\": \"<p>Write the Test Carefully <br></p>\", \"admin_flag\": true, \"duration\": 60, \"archive_status\": false, \"hint_display_status\": null, \"create_date_time\": \"2020-12-02T11:24:25.000Z\", \"modified_date_time\": null, \"scat_id\": \"0\", \"marks\": 40, \"publish\": true }, \"program\": { \"id\": 21, \"code\": \"TEST001                                           \", \"title\": \"Nayarozgar\", \"type\": \"2                                                                                                   \", \"category\": \"Corporate Program                                                                                   \", \"duration\": \"12                                                                                                  \", \"start_date\": \"2020-11-26T18:30:00.000Z\", \"end_date\": \"2021-11-10T18:30:00.000Z\", \"user_id\": \"58\", \"status\": \"approved                                                                                            \", \"total_fee\": \"                                                                                                    \", \"total_credit\": \"                                                                                                                                                      \", \"why_learn\": null, \"intro_video_link\": null, \"overview\": \"\", \"requirements\": null, \"curriculam\": \"\", \"selection_procedure\": \"\", \"program_brochure\": null, \"contact_info\": null, \"certificate_sample\": null, \"statusch_date\": \"2020-11-27T08:56:16.000Z\", \"date_added\": \"2020-11-27T08:13:57.000Z\", \"last_updated\": null, \"email\": \"himadri@cyanberg.com\", \"mobile\": \"9901072124\", \"facebook\": null, \"linkedin\": null, \"twitter\": null, \"student_enroll\": 0, \"teacher_enroll\": 0, \"fee_details\": null, \"banner\": null, \"lastdate_apply\": null, \"dtype\": \"month\", \"feetype\": \"Paid\" }, \"course\": null },\n      loading: false,\n      error: false,\n      testEntryTimeLeft: null,\n      testEndTimeLeft: null,\n      testEnded: false,\n      run_test: null,\n      runTestIndex: 0\n    }\n    this.state = this._state;\n  }\n  get(uri = \"\", body, cb) {\n    this.setState({ loading: true })\n    fetch(\n      API_URI + \"/\" + uri,\n      { method: \"POST\", headers: { \"Content-Type\": \"application/json\" }, body: body ? JSON.stringify(body) : \"{}\" }\n    ).then(res => {\n      if (res.status == 200) {\n        res.json()\n          .then(json => {\n            if (cb) cb(json);\n          })\n          .catch(err => {\n            this.setState({ ...this.state, error: err.message })\n            console.log(err);\n          })\n      }\n      else {\n        res.json()\n          .then(json => {\n            this.setState({ error: json.message });\n          })\n          .catch(err => {\n            this.setState({ error: \"Error networking!\" })\n            console.log(err);\n          })\n      }\n    }).catch(err => {\n      this.setState({ error: err.message })\n      console.log(err);\n    }).finally(() => {\n      this.setState({ loading: false });\n    });\n  }\n  getTest() {\n    this.get(\"test_info\", { passcode: this.state.login.passcode }, test => {\n      if (test.runtest_can) {\n        this.setState({ test, error: null, login: null });\n        if (test.runtest_can.test_end_dttm) {\n          let test_end_dttm = new Date(test.runtest_can.test_end_dttm);\n          var timer = setInterval(() => {\n            if (this.state.run_test) {\n              clearInterval(timer);\n            }\n            else if (test_end_dttm.getTime() > this.now()) {\n              this.setState({ testEnded: false, testEndTimeLeft: this.timeDiff(test_end_dttm) });\n            }\n            else {\n              this.setState({ testEnded: true })\n              clearInterval(timer);\n            }\n          }, 1000);\n        }\n      }\n      else {\n        this.setState({ error: \"Invalid passcode\" })\n      }\n    })\n  }\n  runTest() {\n    this.get(\"run_test\", { passcode: this.state.test.runtest_can.pswd }, (run_test) => {\n      if (run_test.success) {\n        let test_end_dttm = new Date(run_test.runtest_can.test_end_dttm);\n        var timer = setInterval(() => {\n          if (test_end_dttm.getTime() > this.now() && this.state.run_test && !this.state.testEnded) {\n            this.setState({ testEnded: false, testEndTimeLeft: this.timeDiff(test_end_dttm) });\n          }\n          else {\n            this.setState({ testEnded: true });\n            this.saveAnswerAndFinish();\n            clearInterval(timer);\n          }\n        }, 1000);\n        this.setState({ run_test, error: null });\n      }\n      else this.setState({ error: run_test.message ? run_test.message : \"Some error occurred!\" });\n    });\n  }\n  saveAnswerAndShow(question_index) {\n    this.get(\"save_answer\",\n      this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2\n        ?\n        { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, run_test_option_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option, present_ques_id: question_index }\n        :\n        this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3\n          ?\n          { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, run_test_option_ids: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options, present_ques_id: question_index }\n          :\n          { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, answer_body: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body, present_ques_id: question_index },\n      (response) => {\n        if (response.success) {\n          let run_test = this.state.run_test;\n          run_test.runtest_can.present_ques_id = question_index;\n          this.setState({ run_test });\n        }\n        else {\n          this.setState({ error: response.message });\n        }\n      }\n    )\n  }\n  saveAnswerAndFinish() {\n    this.get(\"save_answer\",\n      this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2\n        ?\n        { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, run_test_option_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option, present_ques_id: this.state.run_test.runtest_can.present_ques_id }\n        :\n        this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3\n          ?\n          { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, run_test_option_ids: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options, present_ques_id: this.state.run_test.runtest_can.present_ques_id }\n          :\n          { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, answer_body: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body, present_ques_id: this.state.run_test.runtest_can.present_ques_id },\n      (response) => {\n        if (response.success) {\n          this.get(\"finish_test\", { passcode: this.state.run_test.runtest_can.pswd }, (response2) => {\n            if (response2.success) {\n              this.setState({ run_test: null, testEnded: true });\n            }\n            else this.setState({ error: response2.message });\n          });\n        }\n        else {\n          this.setState({ error: response.message });\n        }\n      }\n    )\n  }\n  render() {\n    return (\n      <PaperProvider>\n        <StatusBar />\n        <Portal>\n          <Modal\n            dismissable={false}\n            visible={this.state.loading}\n            theme={theme}\n\n          >\n            <ActivityIndicator />\n          </Modal>\n        </Portal>\n        {\n          this.state.login ?\n            <View style={styles.login} theme={theme}>\n              <View style={styles.loginPasscodeContainer}>\n                <TextInput\n                  label=\"Passcode\"\n                  style={styles.loginPasscode}\n                  value={this.state.login.passcode}\n                  mode=\"outlined\"\n                  secureTextEntry\n                  theme={theme}\n                  onChangeText={text => {\n                    this.setState({ login: { ...this.state.login, passcode: text } })\n                  }}\n                  onSubmitEditing={this.getTest.bind(this)}\n                />\n                <Button\n                  style={styles.loginButton}\n                  contentStyle={styles.loginButtonContent}\n                  labelStyle={styles.loginButtonText}\n                  mode=\"contained\"\n                  color=\"#42c5f5\"\n                  onPress={this.getTest.bind(this)}\n                  disabled={this.state.loading}\n                >Continue</Button>\n              </View>\n              <View style={styles.loginLogoContainer}>\n                <Image style={styles.loginLogo} source={magnox_logo} />\n              </View>\n            </View>\n            :\n            this.state.test\n              ?\n              <View style={styles.test}>\n                <Surface style={styles.top}>\n                  <Image style={styles.testLogo} source={magnox_logo} />\n                  {\n                    this.state.run_test ?\n                      <View>\n                        <Caption>Time left to end</Caption>\n                        <Title>{this.state.testEndTimeLeft}</Title>\n                      </View>\n                      :\n                      null\n                  }\n                  {\n                    this.state.run_test ?\n                      <Button\n                        style={styles.loginButton}\n                        contentStyle={styles.loginButtonContent}\n                        labelStyle={styles.loginButtonText}\n                        mode=\"contained\"\n                        color=\"#42c5f5\"\n                        onPress={() => this.saveAnswerAndFinish()}\n                      >Exit</Button>\n                      :\n                      <Button\n                        style={styles.loginButton}\n                        contentStyle={styles.loginButtonContent}\n                        labelStyle={styles.loginButtonText}\n                        mode=\"contained\"\n                        color=\"#42c5f5\"\n                        onPress={() => this.setState(this._state)}\n                      >Exit</Button>\n                  }\n                </Surface>\n                {\n                  !this.state.run_test ?\n                    <View style={styles.testContainer}>\n                      <Surface style={styles.testCanDetails}>\n                        <Caption>\n                          Name\n                    </Caption>\n                        <Title>\n                          {this.state.test.user_details.first_name}&nbsp;\n                      {this.state.test.user_details.last_name}\n                        </Title>\n                        <Caption>\n                          Email\n                    </Caption>\n                        <Subheading>\n                          {this.state.test.user_details.email}\n                        </Subheading>\n                        <Caption>\n                          Phone\n                    </Caption>\n                        <Subheading>\n                          {this.state.test.user_details.phone}\n                        </Subheading>\n                        <Caption>\n                          Program\n                    </Caption>\n                        <Subheading>\n                          {this.state.test.program.title}\n                        </Subheading>\n                        {\n                          this.state.test.course\n                            ?\n                            <View>\n                              <Caption>\n                                Course\n                          </Caption>\n                              <Subheading>\n                                {this.state.test.course.title}&nbsp;\n                          </Subheading>\n                            </View>\n                            :\n                            null\n                        }\n\n\n                      </Surface>\n                      <Surface style={styles.testDetails}>\n                        <Title style={styles.testTitle}>\n                          {this.state.test.test.title}\n                        </Title>\n                        <Surface style={styles.testInfo}>\n                          {\n                            this.state.test.test_pub.publish_type == 1\n                              ?\n                              <View>\n                                <Caption>\n                                  Start Time\n                          </Caption>\n                                <Subheading>\n                                  Any\n                          </Subheading>\n                              </View>\n                              :\n                              this.state.test.test_pub.publish_type == 2\n                                ?\n                                <View>\n                                  <Caption>\n                                    Start Time\n                          </Caption>\n                                  <Subheading>\n                                    {this.state.test.test_pub.start_datetm}\n                                  </Subheading>\n                                </View>\n                                :\n                                <View>\n                                  <Caption>\n                                    Start Time\n                          </Caption>\n                                  <Subheading>\n                                    from {this.state.test.test_pub.start_datetm} to {this.state.test.test_pub.end_datetm}\n                                  </Subheading>\n                                </View>\n                          }\n                          <View>\n                            <Caption>\n                              Duration\n                    </Caption>\n                            <Subheading>\n                              {this.state.test.test.duration}&nbsp;Minutes\n                    </Subheading>\n                          </View>\n                        </Surface>\n                        <Surface style={styles.testSections}>\n                          {\n                            this.state.test.sections.map(section => <View style={styles.testSection}>\n                              <Caption>\n                                {section.section_name}\n                              </Caption>\n                              <Subheading>\n                                {section.count}&nbsp; Questions\n                              </Subheading>\n                            </View>)\n                          }\n                        </Surface>\n                        <Surface style={styles.testInstructions}>\n                          <Subheading>Instructions</Subheading>\n                          {\n                            Platform.OS === 'web'\n                              ?\n                              <div dangerouslySetInnerHTML={{ __html: this.state.test.test.details }} />\n                              :\n                              <WebView source={{ html: this.state.test.test.details }} style={{ marginTop: 20 }} />\n                          }\n                        </Surface>\n                        {\n                          this.state.test.runtest_can.test_start_flag\n                            ?\n                            <Surface style={styles.testEntry}>\n                              <View>\n                                <Caption>Test attempted at</Caption>\n                                <Title>{this.then(this.state.test.runtest_can.test_start_dttm)}</Title>\n                              </View>\n                              {\n                                this.state.testEnded\n                                  ?\n                                  <View>\n                                    <Caption>Test ended at</Caption>\n                                    <Title>{this.then(this.state.test.runtest_can.test_end_dttm)}</Title>\n                                  </View>\n                                  :\n                                  <View>\n                                    <Caption>Time left to end</Caption>\n                                    <Title>{this.state.testEndTimeLeft}</Title>\n                                    <Button\n                                      style={styles.loginButton}\n                                      contentStyle={styles.loginButtonContent}\n                                      labelStyle={styles.loginButtonText}\n                                      mode=\"contained\"\n                                      color=\"#42c5f5\"\n                                      onPress={this.runTest.bind(this)}\n                                    >Re-enter</Button>\n                                  </View>\n\n                              }\n                            </Surface>\n                            :\n\n                            <Surface style={styles.testEntry}>\n                              {\n                                this.state.testEntryTimeLeft\n                                  ?\n                                  <View>\n                                    <Caption>Time left to start</Caption>\n                                    <Title>{this.state.testEntryTimeLeft}</Title>\n                                  </View>\n                                  :\n                                  this.state.test.test_pub.publish_type != 1 && new Date(this.state.test.test_pub.end_datetm).getTime() < this.now()\n                                    ?\n                                    <View>\n                                      <Caption>Time to attempt test is over at</Caption>\n                                      <Title>{this.state.test.test_pub.end_datetm}</Title>\n                                    </View>\n                                    :\n                                    <Button\n                                      style={styles.loginButton}\n                                      contentStyle={styles.loginButtonContent}\n                                      labelStyle={styles.loginButtonText}\n                                      mode=\"contained\"\n                                      color=\"#42c5f5\"\n                                      onPress={() => {\n                                        let start_datetm = this.state.test.test_pub.publish_type == 1 ? new Date(this.now()) : new Date(this.state.test.test_pub.start_datetm);\n                                        let timer = setInterval(() => {\n                                          if (start_datetm.getTime() < this.now()) {\n                                            clearInterval(timer);\n                                            this.get(\"start_test\", { passcode: this.state.test.runtest_can.pswd }, (response) => {\n                                              if (response.success) {\n                                                this.runTest.bind(this)();\n                                                this.setState({ error: null, testEntryTimeLeft: null });\n                                              }\n                                              else this.setState({ error: response.message ? response.message : \"Some error occurred!\", testEntryTimeLeft: null });\n                                            });\n                                          }\n                                          else {\n                                            this.setState({\n                                              testEntryTimeLeft: this.timeDiff(start_datetm)\n                                            })\n                                          }\n                                        }, 1000);\n                                      }}\n                                    >Continue</Button>\n\n                              }\n                            </Surface>\n                        }\n                      </Surface>\n\n                    </View>\n                    :\n                    <View style={styles.runTestContainer}>\n                      {\n                        this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id]\n                          ?\n                          <Surface style={styles.question}>\n                            <Subheading>Question {this.state.run_test.runtest_can.present_ques_id + 1} of {this.state.run_test.questions.length}</Subheading>\n                            {\n                              Platform.OS === 'web'\n                                ?\n                                <div dangerouslySetInnerHTML={{ __html: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].qbody }} />\n                                :\n                                <WebView source={{ html: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].qbody }} />\n                            }\n                            {\n                              this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2\n                                ?\n                                <RadioButton.Group value={this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option} onValueChange={(val) => {\n                                  let run_test = this.state.run_test;\n                                  run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option = val;\n                                  run_test.questions[this.state.run_test.runtest_can.present_ques_id].status = 1;\n                                  this.setState({ run_test });\n                                }} style={styles.questionT2}>\n                                  {this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].options.map(option => <RadioButton.Item label={\n                                    Platform.OS === 'web'\n                                      ?\n                                      <div dangerouslySetInnerHTML={{ __html: option.body }} />\n                                      :\n                                      <WebView source={{ html: option.body }} />\n                                  } value={option.id} />)}\n                                </RadioButton.Group>\n                                :\n                                this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3\n                                  ?\n                                  <View style={styles.questionT3}>\n                                    {this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].options.map(option, index => <Checkbox.Item label={\n                                      Platform.OS === 'web'\n                                        ?\n                                        <div dangerouslySetInnerHTML={{ __html: option.body }} />\n                                        :\n                                        <WebView source={{ html: option.body }} />\n                                    }\n                                      onPress={() => {\n                                        let run_test = this.state.run_test;\n                                        if (option.id in run_test.questions[run_test.runtest_can.present_ques_id].selected_options) {\n                                          run_test.questions[run_test.runtest_can.present_ques_id].selected_options = run_test.questions[run_test.runtest_can.present_ques_id].selected_options.filter(e => e != option.id);\n                                        }\n                                        else {\n                                          run_test.questions[run_test.runtest_can.present_ques_id].selected_options.push(option.id);\n                                        }\n                                        run_test.questions[run_test.runtest_can.present_ques_id].status = 1;\n                                        this.setState({ run_test });\n                                      }}\n                                      status={option.id in this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options ? 'checked' : 'unchecked'} />)}\n                                  </View>\n                                  :\n                                  <TextInput\n                                    multiline\n                                    label=\"Answer\"\n                                    style={styles.questionT1}\n                                    value={this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body}\n                                    onChangeText={text => {\n                                      let run_test = this.state.run_test;\n                                      run_test.questions[run_test.runtest_can.present_ques_id].ans_body = text;\n                                      run_test.questions[run_test.runtest_can.present_ques_id].status = 1;\n                                      this.setState({ run_test });\n                                    }}\n                                  />\n                            }\n                            <Surface style={styles.runTestControls}>\n                              <Button\n                                style={styles.loginButton}\n                                contentStyle={styles.loginButtonContent}\n                                labelStyle={styles.loginButtonText}\n                                mode=\"contained\"\n                                color=\"#42c5f5\"\n                                onPress={() => this.saveAnswerAndShow((parseInt(this.state.run_test.runtest_can.present_ques_id) - 1) % this.state.run_test.questions.length)}\n                              >Previous</Button>\n                              <Button\n                                style={styles.loginButton}\n                                contentStyle={styles.loginButtonContent}\n                                labelStyle={styles.loginButtonText}\n                                mode=\"contained\"\n                                color=\"#42c5f5\"\n                                onPress={() => {\n                                  let run_test = this.state.run_test;\n                                  if (run_test.questions[run_test.runtest_can.present_ques_id].type_id == 2) {\n                                    run_test.questions[run_test.runtest_can.present_ques_id].selected_option = 0;\n                                  }\n                                  else if (run_test.questions[run_test.runtest_can.present_ques_id].type_id == 3) {\n                                    run_test.questions[run_test.runtest_can.present_ques_id].selected_options = [];\n                                  }\n                                  else {\n                                    run_test.questions[run_test.runtest_can.present_ques_id].ans_body = null;\n                                  }\n                                  run_test.questions[run_test.runtest_can.present_ques_id].status = 0;\n                                  this.setState({ run_test })\n                                }}\n                              >Clear</Button>\n                              <Button\n                                style={styles.loginButton}\n                                contentStyle={styles.loginButtonContent}\n                                labelStyle={styles.loginButtonText}\n                                mode=\"contained\"\n                                color=\"#42c5f5\"\n                                onPress={() => {\n                                  if (this.state.run_test.runtest_can.present_ques_id == this.state.run_test.questions.length - 1) this.saveAnswerAndFinish();\n                                  else this.saveAnswerAndShow((parseInt(this.state.run_test.runtest_can.present_ques_id) + 1) % this.state.run_test.questions.length)\n                                }\n                                }\n                              >{this.state.run_test.runtest_can.present_ques_id == this.state.run_test.questions.length - 1 ? \"Finish\" : \"Next\"}</Button>\n                            </Surface>\n                          </Surface>\n                          :\n                          null\n                      }\n                      <Surface style={styles.runTestQIndicesContainer}>\n                        <ScrollView>\n                          <View style={styles.runTestQIndices}>\n                            {this.state.run_test.questions.map((question, index) => {\n                              return <TouchableOpacity style={{ margin: 5 }} onPress={() => this.saveAnswerAndShow(index)}>\n                                <Avatar.Text style={{ backgroundColor: this.state.run_test.runtest_can.present_ques_id == index ? \"#42c5f5\" : question.status == 0 ? \"#ff5050\" : \"#50ff50\" }} size={50} label={index + 1} />\n                              </TouchableOpacity>\n                            })}\n                          </View>\n                        </ScrollView>\n                      </Surface>\n                    </View>\n                }\n              </View>\n              :\n              null\n        }\n        <Snackbar\n          visible={this.state.error}\n          onDismiss={() => {\n            this.setState({ error: false });\n          }}\n          style={styles.error}\n          action={{\n            label: 'Close',\n            onPress: () => this.setState({ error: false })\n          }}\n          theme={theme}\n        >\n          <Text style={styles.errorText}>{this.state.error}</Text>\n        </Snackbar>\n      </PaperProvider >\n    );\n  }\n\n  timeDiff(date) {\n    let diff = new Date(date.getTime() - this.now());\n    return (diff.getUTCMonth() ? diff.getUTCMonth() + \" month(s) \" : \"\") +\n      ((diff.getUTCDate() - 1) > 0 ? (diff.getUTCDate() - 1) + \" day(s) \" : \"\") +\n      (diff.getUTCHours() ? diff.getUTCHours() + \" hour(s) \" : \"\") +\n      (diff.getUTCMinutes() ? diff.getUTCMinutes() + \" minute(s) \" : \"\") +\n      (diff.getUTCSeconds() ? diff.getUTCSeconds() + \" second(s) \" : \"\");\n  }\n\n  now() {\n    let curdate = new Date();\n    return curdate.getTime() + curdate.getTimezoneOffset() * 60000;\n  }\n\n  then(date_str) {\n    let date = new Date(date_str);\n    date = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n    return date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n  }\n}\n\n\nAppRegistry.registerComponent(appName, () => Main);"]},"metadata":{},"sourceType":"module"}