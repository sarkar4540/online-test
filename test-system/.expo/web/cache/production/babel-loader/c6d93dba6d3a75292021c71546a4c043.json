{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import NativeText from\"react-native-web/dist/exports/Text\";import{withTheme}from\"../../core/theming\";var Text=function Text(_ref,ref){var style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"style\",\"theme\"]);var root=React.useRef(null);React.useImperativeHandle(ref,function(){return{setNativeProps:function setNativeProps(args){var _root$current;return(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.setNativeProps(args);}};});return React.createElement(NativeText,_extends({},rest,{ref:root,style:[_objectSpread(_objectSpread({},theme.fonts.regular),{},{color:theme.colors.text,textAlign:'left'}),style]}));};export default withTheme(React.forwardRef(Text));","map":{"version":3,"sources":["Text.tsx"],"names":["Text","theme","rest","root","React","setNativeProps","args","color","textAlign","withTheme"],"mappings":"i7DAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,2DAEA,OAAA,SAAA,0BAiBA,GAAMA,CAAAA,IAA6C,CAAG,QAAhDA,CAAAA,IAAgD,CAAA,IAAA,CAAA,GAAA,CAGjD,IAFH,CAAA,KAEG,CAAA,IAAA,CAFH,KAEG,CAFMC,KAEN,CAAA,IAAA,CAFMA,KAEN,CAFgBC,IAEhB,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACH,GAAMC,CAAAA,IAAI,CAAGC,KAAK,CAALA,MAAAA,CAAb,IAAaA,CAAb,CAEAA,KAAK,CAALA,mBAAAA,CAAAA,GAAAA,CAA+B,iBAAO,CACpCC,cAAc,CAAGC,wBAAAA,IAAD,CAAA,CAAA,GAAA,CAAA,aAAA,CAAA,MAAA,CAAA,aAAA,CAAkBH,IAAI,CAAtB,OAAA,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAkBA,aAAAA,CAAAA,cAAAA,CAAlB,IAAkBA,CAAlB,CAAA,CADoB,CAAP,EAA/BC,EAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,GAAG,CAFL,IAAA,CAGE,KAAK,CAAE,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CAEAH,KAAK,CAALA,KAAAA,CAFA,OAAA,CAAA,CAAA,EAAA,CAAA,CAGHM,KAAK,CAAEN,KAAK,CAALA,MAAAA,CAHJ,IAAA,CAIHO,SAAS,CAAE,MAJR,CAAA,CAAA,CAAA,KAAA,CAHT,CAAA,CAAA,CADF,CAVF,CAAA,CA0BA,cAAeC,CAAAA,SAAS,CAACL,KAAK,CAALA,UAAAA,CAAzB,IAAyBA,CAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Text as NativeText, TextStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://facebook.github.io/react-native/docs/text.html#props\n */\nconst Text: React.RefForwardingComponent<{}, Props> = (\n  { style, theme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n          textAlign: 'left',\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(React.forwardRef(Text));\n"]},"metadata":{},"sourceType":"module"}