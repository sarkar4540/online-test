{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sarkar4540/Code/sarkar nigam/magnox/test-system/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, Button, DefaultTheme, Text, Modal, Portal, Provider as PaperProvider, Snackbar, TextInput, ActivityIndicator, Appbar, Surface, Title, Caption, Subheading, Paragraph, RadioButton, Checkbox } from 'react-native-paper';\nimport WebView from 'react-native-webview';\nimport { name as appName } from \"./app.json\";\nimport magnox_logo from \"./assets/magnox.png\";\nvar API_URI = \"https://test.billionskills.com\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 2,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    placeholder: \"#42c5f5\",\n    primary: \"#42c5f5\",\n    surface: \"#42c5f5\",\n    accent: '#f1c40f'\n  })\n});\n\nvar styles = Platform.select({\n  web: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: 640\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n      width: 640,\n      alignSelf: \"center\"\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    },\n    testLogo: {\n      width: 240,\n      height: 100,\n      resizeMode: \"cover\"\n    },\n    test: {\n      flexDirection: \"column\",\n      flex: 1\n    },\n    testContainer: {\n      flexDirection: \"row\"\n    },\n    testCanDetails: {\n      margin: 10,\n      flex: 1,\n      padding: 10\n    },\n    testDetails: {\n      margin: 10,\n      flex: 2,\n      padding: 10\n    },\n    top: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: 5\n    },\n    testSections: {\n      flexDirection: \"row\",\n      alignSelf: \"stretch\",\n      backgroundColor: \"#ffffe0\",\n      margin: 10\n    },\n    testSection: {\n      margin: 10\n    },\n    testInstructions: {\n      alignSelf: \"stretch\",\n      backgroundColor: \"#e0ffef\",\n      alignContent: \"stretch\",\n      margin: 10,\n      padding: 5\n    },\n    testTitle: {\n      textAlign: \"center\"\n    },\n    testInfo: {\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      margin: 10,\n      backgroundColor: \"#e0efff\"\n    },\n    testEntry: {\n      alignItems: \"center\",\n      padding: 10,\n      margin: 10\n    },\n    runTestContainer: {\n      flex: 1,\n      flexDirection: \"row\"\n    },\n    question: {\n      alignSelf: \"flex-start\",\n      padding: 50,\n      flex: 3,\n      margin: 10,\n      fontSize: 25\n    },\n    questionT1: {\n      padding: 20\n    },\n    questionT2: {\n      padding: 20\n    },\n    questionT3: {\n      padding: 20\n    },\n    runTestControls: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      padding: 10\n    },\n    runTestQIndicesContainer: {\n      backgroundColor: \"#e0efff\",\n      margin: 10,\n      flex: 1\n    },\n    runTestQIndices: {\n      padding: 10,\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\"\n    }\n  }),\n  default: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"stretch\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\"\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    },\n    testLogo: {\n      width: 240,\n      height: 100,\n      resizeMode: \"cover\"\n    },\n    test: {\n      flexDirection: \"column\",\n      flex: 1\n    },\n    testCanDetails: {\n      margin: 10\n    },\n    testDetails: {\n      margin: 10,\n      padding: 10\n    },\n    top: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: 5\n    },\n    testSections: {\n      flexDirection: \"row\",\n      alignSelf: \"stretch\",\n      backgroundColor: \"#ffffe0\",\n      margin: 10\n    },\n    testSection: {\n      margin: 10\n    },\n    testInstructions: {\n      alignSelf: \"stretch\",\n      backgroundColor: \"#e0ffef\",\n      alignContent: \"stretch\",\n      margin: 10,\n      padding: 5\n    },\n    testTitle: {\n      textAlign: \"center\"\n    },\n    testInfo: {\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      margin: 10,\n      backgroundColor: \"#e0efff\"\n    },\n    testEntry: {\n      alignItems: \"center\",\n      padding: 10,\n      margin: 10\n    },\n    runTestContainer: {\n      flex: 1,\n      flexDirection: \"row\"\n    },\n    question: {\n      alignSelf: \"flex-start\",\n      padding: 50,\n      flex: 3,\n      margin: 10,\n      fontSize: 25\n    },\n    questionT1: {\n      padding: 20\n    },\n    questionT2: {\n      padding: 20\n    },\n    questionT3: {\n      padding: 20\n    },\n    runTestControls: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      padding: 10\n    },\n    runTestQIndicesContainer: {\n      backgroundColor: \"#e0efff\",\n      margin: 10,\n      flex: 1\n    },\n    runTestQIndices: {\n      padding: 10,\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\"\n    }\n  })\n});\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this._state = {\n      login: {\n        passcode: \"\"\n      },\n      test: {\n        \"runtest_can\": {\n          \"id\": 14,\n          \"test_pub_id\": \"8\",\n          \"can_id\": \"60\",\n          \"pswd\": \"279684\",\n          \"test_start_flag\": true,\n          \"test_end_flag\": false,\n          \"present_ques_id\": \"119\",\n          \"create_date_time\": \"2020-12-15T12:45:59.000Z\",\n          \"entry_date_time\": \"2020-12-15T12:22:14.000Z\",\n          \"sec_id\": \"6\",\n          \"test_start_dttm\": \"2020-12-15T12:22:14.000Z\",\n          \"test_end_dttm\": \"2020-12-15T13:22:14.000Z\"\n        },\n        \"user_details\": {\n          \"id\": \"60\",\n          \"first_name\": \"Aniruddha\",\n          \"last_name\": \"Sarkar\",\n          \"photo_sm\": null,\n          \"photo_lg\": null,\n          \"dateofbirth\": \"1998-01-03T18:30:00.000Z\",\n          \"gender\": \"M\",\n          \"maritalstatus\": null,\n          \"email\": \"sarkar4540@gmail.com\",\n          \"alt_email\": null,\n          \"phone\": \"7548950804\",\n          \"alt_phone\": null,\n          \"bloodgroup\": null,\n          \"aadhar_no\": null,\n          \"website\": null,\n          \"address\": null,\n          \"pin\": null,\n          \"facebook_link\": null,\n          \"linkedin_link\": null,\n          \"google_link\": null,\n          \"mothertongue_id\": null,\n          \"about_me\": null,\n          \"resume_heading\": null,\n          \"expected_ctc\": null,\n          \"caste\": null,\n          \"physical_challenge\": null,\n          \"percentage_ph\": null,\n          \"passport_no\": null,\n          \"organization\": null,\n          \"designation\": null,\n          \"mothers_name\": null,\n          \"mothers_occupation\": null,\n          \"created_date_time\": \"2020-11-28T06:16:45.000Z\",\n          \"modified_date_time\": null,\n          \"city_id\": null\n        },\n        \"test_pub\": {\n          \"id\": 8,\n          \"test_id\": \"5\",\n          \"org_id\": null,\n          \"user_id\": \"58\",\n          \"publish_type\": \"1\",\n          \"start_datetm\": null,\n          \"create_date_time\": \"2020-12-03T14:08:29.000Z\",\n          \"modified_date_time\": null,\n          \"end_datetm\": null,\n          \"testc\": null,\n          \"tp_archive\": false\n        },\n        \"test\": {\n          \"id\": 5,\n          \"cat_id\": \"21\",\n          \"user_id\": \"58\",\n          \"title\": \"College Test\",\n          \"details\": \"<p>Write the Test Carefully <br></p>\",\n          \"admin_flag\": true,\n          \"duration\": 60,\n          \"archive_status\": false,\n          \"hint_display_status\": null,\n          \"create_date_time\": \"2020-12-02T11:24:25.000Z\",\n          \"modified_date_time\": null,\n          \"scat_id\": \"0\",\n          \"marks\": 40,\n          \"publish\": true\n        },\n        \"program\": {\n          \"id\": 21,\n          \"code\": \"TEST001                                           \",\n          \"title\": \"Nayarozgar\",\n          \"type\": \"2                                                                                                   \",\n          \"category\": \"Corporate Program                                                                                   \",\n          \"duration\": \"12                                                                                                  \",\n          \"start_date\": \"2020-11-26T18:30:00.000Z\",\n          \"end_date\": \"2021-11-10T18:30:00.000Z\",\n          \"user_id\": \"58\",\n          \"status\": \"approved                                                                                            \",\n          \"total_fee\": \"                                                                                                    \",\n          \"total_credit\": \"                                                                                                                                                      \",\n          \"why_learn\": null,\n          \"intro_video_link\": null,\n          \"overview\": \"\",\n          \"requirements\": null,\n          \"curriculam\": \"\",\n          \"selection_procedure\": \"\",\n          \"program_brochure\": null,\n          \"contact_info\": null,\n          \"certificate_sample\": null,\n          \"statusch_date\": \"2020-11-27T08:56:16.000Z\",\n          \"date_added\": \"2020-11-27T08:13:57.000Z\",\n          \"last_updated\": null,\n          \"email\": \"himadri@cyanberg.com\",\n          \"mobile\": \"9901072124\",\n          \"facebook\": null,\n          \"linkedin\": null,\n          \"twitter\": null,\n          \"student_enroll\": 0,\n          \"teacher_enroll\": 0,\n          \"fee_details\": null,\n          \"banner\": null,\n          \"lastdate_apply\": null,\n          \"dtype\": \"month\",\n          \"feetype\": \"Paid\"\n        },\n        \"course\": null\n      },\n      loading: false,\n      error: false,\n      testEntryTimeLeft: null,\n      testEndTimeLeft: null,\n      testEnded: false,\n      run_test: null,\n      runTestIndex: 0\n    };\n    _this.state = _this._state;\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"get\",\n    value: function get() {\n      var _this2 = this;\n\n      var uri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var body = arguments.length > 1 ? arguments[1] : undefined;\n      var cb = arguments.length > 2 ? arguments[2] : undefined;\n      this.setState({\n        loading: true\n      });\n      fetch(API_URI + \"/\" + uri, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body ? JSON.stringify(body) : \"{}\"\n      }).then(function (res) {\n        if (res.status == 200) {\n          res.json().then(function (json) {\n            if (cb) cb(json);\n          }).catch(function (err) {\n            _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n              error: err.message\n            }));\n\n            console.log(err);\n          });\n        } else {\n          res.json().then(function (json) {\n            _this2.setState({\n              error: json.message\n            });\n          }).catch(function (err) {\n            _this2.setState({\n              error: \"Error networking!\"\n            });\n\n            console.log(err);\n          });\n        }\n      }).catch(function (err) {\n        _this2.setState({\n          error: err.message\n        });\n\n        console.log(err);\n      }).finally(function () {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"getTest\",\n    value: function getTest() {\n      var _this3 = this;\n\n      this.get(\"test_info\", {\n        passcode: this.state.login.passcode\n      }, function (test) {\n        if (test.runtest_can) {\n          _this3.setState({\n            test: test,\n            error: null,\n            login: null\n          });\n\n          if (test.runtest_can.test_end_dttm) {\n            var test_end_dttm = new Date(test.runtest_can.test_end_dttm);\n            var timer = setInterval(function () {\n              if (_this3.state.run_test) {\n                clearInterval(timer);\n              } else if (test_end_dttm.getTime() > _this3.now()) {\n                _this3.setState({\n                  testEnded: false,\n                  testEndTimeLeft: _this3.timeDiff(test_end_dttm)\n                });\n              } else {\n                _this3.setState({\n                  testEnded: true\n                });\n\n                clearInterval(timer);\n              }\n            }, 1000);\n          }\n        } else {\n          _this3.setState({\n            error: \"Invalid passcode\"\n          });\n        }\n      });\n    }\n  }, {\n    key: \"runTest\",\n    value: function runTest() {\n      var _this4 = this;\n\n      this.get(\"run_test\", {\n        passcode: this.state.test.runtest_can.pswd\n      }, function (run_test) {\n        if (run_test.success) {\n          var test_end_dttm = new Date(run_test.runtest_can.test_end_dttm);\n          var timer = setInterval(function () {\n            if (test_end_dttm.getTime() > _this4.now() && _this4.state.run_test && !_this4.state.testEnded) {\n              _this4.setState({\n                testEnded: false,\n                testEndTimeLeft: _this4.timeDiff(test_end_dttm)\n              });\n            } else {\n              _this4.setState({\n                testEnded: true\n              });\n\n              _this4.saveAnswerAndFinish();\n\n              clearInterval(timer);\n            }\n          }, 1000);\n\n          _this4.setState({\n            run_test: run_test,\n            error: null\n          });\n        } else _this4.setState({\n          error: run_test.message ? run_test.message : \"Some error occurred!\"\n        });\n      });\n    }\n  }, {\n    key: \"saveAnswerAndShow\",\n    value: function saveAnswerAndShow(question_index) {\n      var _this5 = this;\n\n      this.get(\"save_answer\", this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2 ? {\n        passcode: this.state.run_test.runtest_can.pswd,\n        run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,\n        run_test_option_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option,\n        present_ques_id: question_index\n      } : this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3 ? {\n        passcode: this.state.run_test.runtest_can.pswd,\n        run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,\n        run_test_option_ids: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options,\n        present_ques_id: question_index\n      } : {\n        passcode: this.state.run_test.runtest_can.pswd,\n        run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,\n        answer_body: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body,\n        present_ques_id: question_index\n      }, function (response) {\n        if (response.success) {\n          var run_test = _this5.state.run_test;\n          run_test.runtest_can.present_ques_id = question_index;\n\n          _this5.setState({\n            run_test: run_test\n          });\n        } else {\n          _this5.setState({\n            error: response.message\n          });\n        }\n      });\n    }\n  }, {\n    key: \"saveAnswerAndFinish\",\n    value: function saveAnswerAndFinish() {\n      var _this6 = this;\n\n      this.get(\"save_answer\", this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2 ? {\n        passcode: this.state.run_test.runtest_can.pswd,\n        run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,\n        run_test_option_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option,\n        present_ques_id: this.state.run_test.runtest_can.present_ques_id\n      } : this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3 ? {\n        passcode: this.state.run_test.runtest_can.pswd,\n        run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,\n        run_test_option_ids: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options,\n        present_ques_id: this.state.run_test.runtest_can.present_ques_id\n      } : {\n        passcode: this.state.run_test.runtest_can.pswd,\n        run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id,\n        answer_body: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body,\n        present_ques_id: this.state.run_test.runtest_can.present_ques_id\n      }, function (response) {\n        if (response.success) {\n          _this6.get(\"finish_test\", {\n            passcode: _this6.state.run_test.runtest_can.pswd\n          }, function (response2) {\n            if (response2.success) {\n              _this6.setState({\n                run_test: null,\n                testEnded: true\n              });\n            } else _this6.setState({\n              error: response2.message\n            });\n          });\n        } else {\n          _this6.setState({\n            error: response.message\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(PaperProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 9\n        }\n      }), React.createElement(Portal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 9\n        }\n      }, React.createElement(Modal, {\n        dismissable: false,\n        visible: this.state.loading,\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }\n      }))), this.state.login ? React.createElement(View, {\n        style: styles.login,\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.loginPasscodeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        label: \"Passcode\",\n        style: styles.loginPasscode,\n        value: this.state.login.passcode,\n        mode: \"outlined\",\n        secureTextEntry: true,\n        theme: theme,\n        onChangeText: function onChangeText(text) {\n          _this7.setState({\n            login: _objectSpread(_objectSpread({}, _this7.state.login), {}, {\n              passcode: text\n            })\n          });\n        },\n        onSubmitEditing: this.getTest.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: this.getTest.bind(this),\n        disabled: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 17\n        }\n      }, \"Continue\")), React.createElement(View, {\n        style: styles.loginLogoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        style: styles.loginLogo,\n        source: magnox_logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 17\n        }\n      }))) : this.state.test ? React.createElement(View, {\n        style: styles.test,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 15\n        }\n      }, React.createElement(Surface, {\n        style: styles.top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.testLogo,\n        source: magnox_logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 19\n        }\n      }), this.state.run_test ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 23\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 25\n        }\n      }, \"Time left to end\"), React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 25\n        }\n      }, this.state.testEndTimeLeft)) : null, this.state.run_test ? React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: function onPress() {\n          return _this7.saveAnswerAndFinish();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 23\n        }\n      }, \"Exit\") : React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: function onPress() {\n          return _this7.setState(_this7._state);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 23\n        }\n      }, \"Exit\")), !this.state.run_test ? React.createElement(View, {\n        style: styles.testContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }\n      }, React.createElement(Surface, {\n        style: styles.testCanDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 23\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 25\n        }\n      }, \"Name\"), React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 25\n        }\n      }, this.state.test.user_details.first_name, \"\\xA0\", this.state.test.user_details.last_name), React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 25\n        }\n      }, \"Email\"), React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 25\n        }\n      }, this.state.test.user_details.email), React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 25\n        }\n      }, \"Phone\"), React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 25\n        }\n      }, this.state.test.user_details.phone), React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 25\n        }\n      }, \"Program\"), React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }\n      }, this.state.test.program.title), this.state.test.course ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 29\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 31\n        }\n      }, \"Course\"), React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 31\n        }\n      }, this.state.test.course.title, \"\\xA0\")) : null), React.createElement(Surface, {\n        style: styles.testDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 23\n        }\n      }, React.createElement(Title, {\n        style: styles.testTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 25\n        }\n      }, this.state.test.test.title), React.createElement(Surface, {\n        style: styles.testInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 25\n        }\n      }, this.state.test.test_pub.publish_type == 1 ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 31\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 33\n        }\n      }, \"Start Time\"), React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 33\n        }\n      }, \"Any\")) : this.state.test.test_pub.publish_type == 2 ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 33\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 35\n        }\n      }, \"Start Time\"), React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 35\n        }\n      }, this.state.test.test_pub.start_datetm)) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 33\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 35\n        }\n      }, \"Start Time\"), React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 35\n        }\n      }, \"from \", this.state.test.test_pub.start_datetm, \" to \", this.state.test.test_pub.end_datetm)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 27\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 29\n        }\n      }, \"Duration\"), React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 29\n        }\n      }, this.state.test.test.duration, \"\\xA0Minutes\"))), React.createElement(Surface, {\n        style: styles.testSections,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 25\n        }\n      }, this.state.test.sections.map(function (section) {\n        return React.createElement(View, {\n          style: styles.testSection,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 69\n          }\n        }, React.createElement(Caption, {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 31\n          }\n        }, section.section_name), React.createElement(Subheading, {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 31\n          }\n        }, section.count, \"\\xA0 Questions\"));\n      })), React.createElement(Surface, {\n        style: styles.testInstructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 25\n        }\n      }, React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 27\n        }\n      }, \"Instructions\"), Platform.OS === 'web' ? React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.test.test.details\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 31\n        }\n      }) : React.createElement(WebView, {\n        originWhitelist: ['*'],\n        source: {\n          html: this.state.test.test.details\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 31\n        }\n      })), this.state.test.runtest_can.test_start_flag ? React.createElement(Surface, {\n        style: styles.testEntry,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 31\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 33\n        }\n      }, \"Test attempted at\"), React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 33\n        }\n      }, this.then(this.state.test.runtest_can.test_start_dttm))), this.state.testEnded ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 35\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 37\n        }\n      }, \"Test ended at\"), React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 37\n        }\n      }, this.then(this.state.test.runtest_can.test_end_dttm))) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 35\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 37\n        }\n      }, \"Time left to end\"), React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 37\n        }\n      }, this.state.testEndTimeLeft), React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: this.runTest.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 37\n        }\n      }, \"Re-enter\"))) : React.createElement(Surface, {\n        style: styles.testEntry,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 29\n        }\n      }, this.state.testEntryTimeLeft ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 35\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 37\n        }\n      }, \"Time left to start\"), React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 37\n        }\n      }, this.state.testEntryTimeLeft)) : this.state.test.test_pub.publish_type != 1 && new Date(this.state.test.test_pub.end_datetm).getTime() < this.now() ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 37\n        }\n      }, React.createElement(Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 39\n        }\n      }, \"Time to attempt test is over at\"), React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 39\n        }\n      }, this.state.test.test_pub.end_datetm)) : React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: function onPress() {\n          var start_datetm = _this7.state.test.test_pub.publish_type == 1 ? new Date(_this7.now()) : new Date(_this7.state.test.test_pub.start_datetm);\n          var timer = setInterval(function () {\n            if (start_datetm.getTime() < _this7.now()) {\n              clearInterval(timer);\n\n              _this7.get(\"start_test\", {\n                passcode: _this7.state.test.runtest_can.pswd\n              }, function (response) {\n                if (response.success) {\n                  _this7.runTest.bind(_this7)();\n\n                  _this7.setState({\n                    error: null,\n                    testEntryTimeLeft: null\n                  });\n                } else _this7.setState({\n                  error: response.message ? response.message : \"Some error occurred!\",\n                  testEntryTimeLeft: null\n                });\n              });\n            } else {\n              _this7.setState({\n                testEntryTimeLeft: _this7.timeDiff(start_datetm)\n              });\n            }\n          }, 1000);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 37\n        }\n      }, \"Continue\")))) : React.createElement(View, {\n        style: styles.runTestContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 21\n        }\n      }, this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id] ? React.createElement(Surface, {\n        style: styles.question,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 27\n        }\n      }, React.createElement(Subheading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 29\n        }\n      }, \"Question \", this.state.run_test.runtest_can.present_ques_id + 1, \" of \", this.state.run_test.questions.length), Platform.OS === 'web' ? React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].qbody\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 33\n        }\n      }) : React.createElement(WebView, {\n        source: {\n          html: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].qbody\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 33\n        }\n      }), this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2 ? React.createElement(RadioButton.Group, {\n        value: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option,\n        onValueChange: function onValueChange(val) {\n          var run_test = _this7.state.run_test;\n          run_test.questions[_this7.state.run_test.runtest_can.present_ques_id].selected_option = val;\n          run_test.questions[_this7.state.run_test.runtest_can.present_ques_id].status = 1;\n\n          _this7.setState({\n            run_test: run_test\n          });\n        },\n        style: styles.questionT2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 33\n        }\n      }, this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].options.map(function (option) {\n        return React.createElement(RadioButton.Item, {\n          label: Platform.OS === 'web' ? React.createElement(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: option.body\n            },\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 39\n            }\n          }) : React.createElement(WebView, {\n            source: {\n              html: option.body\n            },\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 39\n            }\n          }),\n          value: option.id,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 137\n          }\n        });\n      })) : this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3 ? React.createElement(View, {\n        style: styles.questionT3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 35\n        }\n      }, this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].options.map(option, function (index) {\n        return React.createElement(Checkbox.Item, {\n          label: Platform.OS === 'web' ? React.createElement(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: option.body\n            },\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 41\n            }\n          }) : React.createElement(WebView, {\n            source: {\n              html: option.body\n            },\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 41\n            }\n          }),\n          onPress: function onPress() {\n            var run_test = _this7.state.run_test;\n\n            if (option.id in run_test.questions[run_test.runtest_can.present_ques_id].selected_options) {\n              run_test.questions[run_test.runtest_can.present_ques_id].selected_options = run_test.questions[run_test.runtest_can.present_ques_id].selected_options.filter(function (e) {\n                return e != option.id;\n              });\n            } else {\n              run_test.questions[run_test.runtest_can.present_ques_id].selected_options.push(option.id);\n            }\n\n            run_test.questions[run_test.runtest_can.present_ques_id].status = 1;\n\n            _this7.setState({\n              run_test: run_test\n            });\n          },\n          status: option.id in _this7.state.run_test.questions[_this7.state.run_test.runtest_can.present_ques_id].selected_options ? 'checked' : 'unchecked',\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 146\n          }\n        });\n      })) : React.createElement(TextInput, {\n        multiline: true,\n        label: \"Answer\",\n        style: styles.questionT1,\n        value: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body,\n        onChangeText: function onChangeText(text) {\n          var run_test = _this7.state.run_test;\n          run_test.questions[run_test.runtest_can.present_ques_id].ans_body = text;\n          run_test.questions[run_test.runtest_can.present_ques_id].status = 1;\n\n          _this7.setState({\n            run_test: run_test\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 35\n        }\n      }), React.createElement(Surface, {\n        style: styles.runTestControls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 29\n        }\n      }, React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: function onPress() {\n          return _this7.saveAnswerAndShow((parseInt(_this7.state.run_test.runtest_can.present_ques_id) - 1) % _this7.state.run_test.questions.length);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 31\n        }\n      }, \"Previous\"), React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: function onPress() {\n          var run_test = _this7.state.run_test;\n\n          if (run_test.questions[run_test.runtest_can.present_ques_id].type_id == 2) {\n            run_test.questions[run_test.runtest_can.present_ques_id].selected_option = 0;\n          } else if (run_test.questions[run_test.runtest_can.present_ques_id].type_id == 3) {\n            run_test.questions[run_test.runtest_can.present_ques_id].selected_options = [];\n          } else {\n            run_test.questions[run_test.runtest_can.present_ques_id].ans_body = null;\n          }\n\n          run_test.questions[run_test.runtest_can.present_ques_id].status = 0;\n\n          _this7.setState({\n            run_test: run_test\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 31\n        }\n      }, \"Clear\"), React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: function onPress() {\n          if (_this7.state.run_test.runtest_can.present_ques_id == _this7.state.run_test.questions.length - 1) _this7.saveAnswerAndFinish();else _this7.saveAnswerAndShow((parseInt(_this7.state.run_test.runtest_can.present_ques_id) + 1) % _this7.state.run_test.questions.length);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 31\n        }\n      }, this.state.run_test.runtest_can.present_ques_id == this.state.run_test.questions.length - 1 ? \"Finish\" : \"Next\"))) : null, React.createElement(Surface, {\n        style: styles.runTestQIndicesContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 23\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.runTestQIndices,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 27\n        }\n      }, this.state.run_test.questions.map(function (question, index) {\n        return React.createElement(TouchableOpacity, {\n          style: {\n            margin: 5\n          },\n          onPress: function onPress() {\n            return _this7.saveAnswerAndShow(index);\n          },\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 38\n          }\n        }, React.createElement(Avatar.Text, {\n          style: {\n            backgroundColor: _this7.state.run_test.runtest_can.present_ques_id == index ? \"#42c5f5\" : question.status == 0 ? \"#ff5050\" : \"#50ff50\"\n          },\n          size: 50,\n          label: index + 1,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 33\n          }\n        }));\n      })))))) : null, React.createElement(Snackbar, {\n        visible: this.state.error,\n        onDismiss: function onDismiss() {\n          _this7.setState({\n            error: false\n          });\n        },\n        style: styles.error,\n        action: {\n          label: 'Close',\n          onPress: function onPress() {\n            return _this7.setState({\n              error: false\n            });\n          }\n        },\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.errorText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }\n      }, this.state.error)));\n    }\n  }, {\n    key: \"timeDiff\",\n    value: function timeDiff(date) {\n      var diff = new Date(date.getTime() - this.now());\n      return (diff.getUTCMonth() ? diff.getUTCMonth() + \" month(s) \" : \"\") + (diff.getUTCDate() - 1 > 0 ? diff.getUTCDate() - 1 + \" day(s) \" : \"\") + (diff.getUTCHours() ? diff.getUTCHours() + \" hour(s) \" : \"\") + (diff.getUTCMinutes() ? diff.getUTCMinutes() + \" minute(s) \" : \"\") + (diff.getUTCSeconds() ? diff.getUTCSeconds() + \" second(s) \" : \"\");\n    }\n  }, {\n    key: \"now\",\n    value: function now() {\n      var curdate = new Date();\n      return curdate.getTime() + curdate.getTimezoneOffset() * 60000;\n    }\n  }, {\n    key: \"then\",\n    value: function then(date_str) {\n      var date = new Date(date_str.replace(\" \", \"T\"));\n      date = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n      console.log(date_str);\n      return date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\nAppRegistry.registerComponent(appName, function () {\n  return Main;\n});","map":{"version":3,"sources":["/home/sarkar4540/Code/sarkar nigam/magnox/test-system/App.js"],"names":["React","Avatar","Button","DefaultTheme","Text","Modal","Portal","Provider","PaperProvider","Snackbar","TextInput","ActivityIndicator","Appbar","Surface","Title","Caption","Subheading","Paragraph","RadioButton","Checkbox","WebView","name","appName","magnox_logo","API_URI","theme","roundness","colors","placeholder","primary","surface","accent","styles","Platform","select","web","StyleSheet","create","login","flexDirection","alignItems","justifyContent","flex","loginPasscodeContainer","paddingLeft","paddingRight","paddingTop","width","loginButton","marginTop","loginButtonContent","height","loginButtonText","color","loginLogo","resizeMode","loginLogoContainer","error","backgroundColor","alignSelf","errorText","testLogo","test","testContainer","testCanDetails","margin","padding","testDetails","top","testSections","testSection","testInstructions","alignContent","testTitle","textAlign","testInfo","testEntry","runTestContainer","question","fontSize","questionT1","questionT2","questionT3","runTestControls","runTestQIndicesContainer","runTestQIndices","flexWrap","default","Main","props","_state","passcode","loading","testEntryTimeLeft","testEndTimeLeft","testEnded","run_test","runTestIndex","state","uri","body","cb","setState","fetch","method","headers","JSON","stringify","then","res","status","json","catch","err","message","console","log","finally","get","runtest_can","test_end_dttm","Date","timer","setInterval","clearInterval","getTime","now","timeDiff","pswd","success","saveAnswerAndFinish","question_index","questions","present_ques_id","type_id","run_test_id","id","run_test_option_id","selected_option","run_test_option_ids","selected_options","answer_body","ans_body","response","response2","loginPasscode","text","getTest","bind","user_details","first_name","last_name","email","phone","program","title","course","test_pub","publish_type","start_datetm","end_datetm","duration","sections","map","section","section_name","count","OS","__html","details","html","test_start_flag","test_start_dttm","runTest","length","qbody","val","options","option","index","filter","e","push","saveAnswerAndShow","parseInt","label","onPress","date","diff","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","curdate","getTimezoneOffset","date_str","replace","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Component","AppRegistry","registerComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { AppRegistry, Platform, StyleSheet, View, Image, StatusBar, TouchableOpacity, ScrollView } from 'react-native';\nimport { Avatar, Button, DefaultTheme, Text, Modal, Portal, Provider as PaperProvider, Snackbar, TextInput, ActivityIndicator, Appbar, Surface, Title, Caption, Subheading, Paragraph, RadioButton, Checkbox } from 'react-native-paper';\nimport WebView from 'react-native-webview';\nimport { name as appName } from './app.json';\nimport magnox_logo from './assets/magnox.png';\n\nconst API_URI = \"https://test.billionskills.com\";\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    placeholder: \"#42c5f5\", primary: \"#42c5f5\",\n    surface: \"#42c5f5\",\n    accent: '#f1c40f',\n  },\n};\n\nconst styles = Platform.select({\n  web: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: 640\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n      width: 640,\n      alignSelf: \"center\"\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    },\n    testLogo: {\n      width: 240,\n      height: 100,\n      resizeMode: \"cover\"\n    },\n    test: {\n      flexDirection: \"column\",\n      flex: 1\n    },\n    testContainer: {\n      flexDirection: \"row\"\n    },\n    testCanDetails: {\n      margin: 10,\n      flex: 1,\n      padding: 10\n    },\n    testDetails: {\n      margin: 10,\n      flex: 2,\n      padding: 10\n    },\n    top: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: 5\n    },\n    testSections: {\n      flexDirection: \"row\",\n      alignSelf: \"stretch\",\n      backgroundColor: \"#ffffe0\",\n      margin: 10\n    },\n    testSection: {\n      margin: 10\n    },\n    testInstructions: {\n      alignSelf: \"stretch\",\n      backgroundColor: \"#e0ffef\",\n      alignContent: \"stretch\",\n      margin: 10,\n      padding: 5\n    },\n    testTitle: {\n      textAlign: \"center\",\n    },\n    testInfo: {\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      margin: 10,\n      backgroundColor: \"#e0efff\"\n    },\n    testEntry: {\n      alignItems: \"center\",\n      padding: 10,\n      margin: 10\n    },\n    runTestContainer: {\n      flex: 1,\n      flexDirection: \"row\",\n    },\n    question: {\n      alignSelf: \"flex-start\",\n      padding: 50,\n      flex: 3,\n      margin: 10,\n      fontSize: 25\n    },\n    questionT1: {\n      padding: 20\n    },\n    questionT2: {\n      padding: 20\n    },\n    questionT3: {\n      padding: 20\n    },\n    runTestControls: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      padding: 10\n    },\n    runTestQIndicesContainer: {\n      backgroundColor: \"#e0efff\",\n      margin: 10,\n      flex: 1\n    },\n    runTestQIndices: {\n      padding: 10,\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\"\n    }\n  }),\n  default: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"stretch\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    },\n    testLogo: {\n      width: 240,\n      height: 100,\n      resizeMode: \"cover\"\n    },\n    test: {\n      flexDirection: \"column\",\n      flex: 1\n    },\n    testCanDetails: {\n      margin: 10\n    },\n    testDetails: {\n      margin: 10,\n      padding: 10\n    },\n    top: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: 5\n    },\n    testSections: {\n      flexDirection: \"row\",\n      alignSelf: \"stretch\",\n      backgroundColor: \"#ffffe0\",\n      margin: 10\n    },\n    testSection: {\n      margin: 10\n    },\n    testInstructions: {\n      alignSelf: \"stretch\",\n      backgroundColor: \"#e0ffef\",\n      alignContent: \"stretch\",\n      margin: 10,\n      padding: 5\n    },\n    testTitle: {\n      textAlign: \"center\",\n    },\n    testInfo: {\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      margin: 10,\n      backgroundColor: \"#e0efff\"\n    },\n    testEntry: {\n      alignItems: \"center\",\n      padding: 10,\n      margin: 10\n    },\n    runTestContainer: {\n      flex: 1,\n      flexDirection: \"row\",\n    },\n    question: {\n      alignSelf: \"flex-start\",\n      padding: 50,\n      flex: 3,\n      margin: 10,\n      fontSize: 25\n    },\n    questionT1: {\n      padding: 20\n    },\n    questionT2: {\n      padding: 20\n    },\n    questionT3: {\n      padding: 20\n    },\n    runTestControls: {\n      backgroundColor: \"#efefef\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      padding: 10\n    },\n    runTestQIndicesContainer: {\n      backgroundColor: \"#e0efff\",\n      margin: 10,\n      flex: 1\n    },\n    runTestQIndices: {\n      padding: 10,\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\"\n    }\n  })\n});\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._state = {\n      login: {\n        passcode: \"\",\n      },\n      test: { \"runtest_can\": { \"id\": 14, \"test_pub_id\": \"8\", \"can_id\": \"60\", \"pswd\": \"279684\", \"test_start_flag\": true, \"test_end_flag\": false, \"present_ques_id\": \"119\", \"create_date_time\": \"2020-12-15T12:45:59.000Z\", \"entry_date_time\": \"2020-12-15T12:22:14.000Z\", \"sec_id\": \"6\", \"test_start_dttm\": \"2020-12-15T12:22:14.000Z\", \"test_end_dttm\": \"2020-12-15T13:22:14.000Z\" }, \"user_details\": { \"id\": \"60\", \"first_name\": \"Aniruddha\", \"last_name\": \"Sarkar\", \"photo_sm\": null, \"photo_lg\": null, \"dateofbirth\": \"1998-01-03T18:30:00.000Z\", \"gender\": \"M\", \"maritalstatus\": null, \"email\": \"sarkar4540@gmail.com\", \"alt_email\": null, \"phone\": \"7548950804\", \"alt_phone\": null, \"bloodgroup\": null, \"aadhar_no\": null, \"website\": null, \"address\": null, \"pin\": null, \"facebook_link\": null, \"linkedin_link\": null, \"google_link\": null, \"mothertongue_id\": null, \"about_me\": null, \"resume_heading\": null, \"expected_ctc\": null, \"caste\": null, \"physical_challenge\": null, \"percentage_ph\": null, \"passport_no\": null, \"organization\": null, \"designation\": null, \"mothers_name\": null, \"mothers_occupation\": null, \"created_date_time\": \"2020-11-28T06:16:45.000Z\", \"modified_date_time\": null, \"city_id\": null }, \"test_pub\": { \"id\": 8, \"test_id\": \"5\", \"org_id\": null, \"user_id\": \"58\", \"publish_type\": \"1\", \"start_datetm\": null, \"create_date_time\": \"2020-12-03T14:08:29.000Z\", \"modified_date_time\": null, \"end_datetm\": null, \"testc\": null, \"tp_archive\": false }, \"test\": { \"id\": 5, \"cat_id\": \"21\", \"user_id\": \"58\", \"title\": \"College Test\", \"details\": \"<p>Write the Test Carefully <br></p>\", \"admin_flag\": true, \"duration\": 60, \"archive_status\": false, \"hint_display_status\": null, \"create_date_time\": \"2020-12-02T11:24:25.000Z\", \"modified_date_time\": null, \"scat_id\": \"0\", \"marks\": 40, \"publish\": true }, \"program\": { \"id\": 21, \"code\": \"TEST001                                           \", \"title\": \"Nayarozgar\", \"type\": \"2                                                                                                   \", \"category\": \"Corporate Program                                                                                   \", \"duration\": \"12                                                                                                  \", \"start_date\": \"2020-11-26T18:30:00.000Z\", \"end_date\": \"2021-11-10T18:30:00.000Z\", \"user_id\": \"58\", \"status\": \"approved                                                                                            \", \"total_fee\": \"                                                                                                    \", \"total_credit\": \"                                                                                                                                                      \", \"why_learn\": null, \"intro_video_link\": null, \"overview\": \"\", \"requirements\": null, \"curriculam\": \"\", \"selection_procedure\": \"\", \"program_brochure\": null, \"contact_info\": null, \"certificate_sample\": null, \"statusch_date\": \"2020-11-27T08:56:16.000Z\", \"date_added\": \"2020-11-27T08:13:57.000Z\", \"last_updated\": null, \"email\": \"himadri@cyanberg.com\", \"mobile\": \"9901072124\", \"facebook\": null, \"linkedin\": null, \"twitter\": null, \"student_enroll\": 0, \"teacher_enroll\": 0, \"fee_details\": null, \"banner\": null, \"lastdate_apply\": null, \"dtype\": \"month\", \"feetype\": \"Paid\" }, \"course\": null },\n      loading: false,\n      error: false,\n      testEntryTimeLeft: null,\n      testEndTimeLeft: null,\n      testEnded: false,\n      run_test: null,\n      runTestIndex: 0\n    }\n    this.state = this._state;\n  }\n  get(uri = \"\", body, cb) {\n    this.setState({ loading: true })\n    fetch(\n      API_URI + \"/\" + uri,\n      { method: \"POST\", headers: { \"Content-Type\": \"application/json\" }, body: body ? JSON.stringify(body) : \"{}\" }\n    ).then(res => {\n      if (res.status == 200) {\n        res.json()\n          .then(json => {\n            if (cb) cb(json);\n          })\n          .catch(err => {\n            this.setState({ ...this.state, error: err.message })\n            console.log(err);\n          })\n      }\n      else {\n        res.json()\n          .then(json => {\n            this.setState({ error: json.message });\n          })\n          .catch(err => {\n            this.setState({ error: \"Error networking!\" })\n            console.log(err);\n          })\n      }\n    }).catch(err => {\n      this.setState({ error: err.message })\n      console.log(err);\n    }).finally(() => {\n      this.setState({ loading: false });\n    });\n  }\n  getTest() {\n    this.get(\"test_info\", { passcode: this.state.login.passcode }, test => {\n      if (test.runtest_can) {\n        this.setState({ test, error: null, login: null });\n        if (test.runtest_can.test_end_dttm) {\n          let test_end_dttm = new Date(test.runtest_can.test_end_dttm);\n          var timer = setInterval(() => {\n            if (this.state.run_test) {\n              clearInterval(timer);\n            }\n            else if (test_end_dttm.getTime() > this.now()) {\n              this.setState({ testEnded: false, testEndTimeLeft: this.timeDiff(test_end_dttm) });\n            }\n            else {\n              this.setState({ testEnded: true })\n              clearInterval(timer);\n            }\n          }, 1000);\n        }\n      }\n      else {\n        this.setState({ error: \"Invalid passcode\" })\n      }\n    })\n  }\n  runTest() {\n    this.get(\"run_test\", { passcode: this.state.test.runtest_can.pswd }, (run_test) => {\n      if (run_test.success) {\n        let test_end_dttm = new Date(run_test.runtest_can.test_end_dttm);\n        var timer = setInterval(() => {\n          if (test_end_dttm.getTime() > this.now() && this.state.run_test && !this.state.testEnded) {\n            this.setState({ testEnded: false, testEndTimeLeft: this.timeDiff(test_end_dttm) });\n          }\n          else {\n            this.setState({ testEnded: true });\n            this.saveAnswerAndFinish();\n            clearInterval(timer);\n          }\n        }, 1000);\n        this.setState({ run_test, error: null });\n      }\n      else this.setState({ error: run_test.message ? run_test.message : \"Some error occurred!\" });\n    });\n  }\n  saveAnswerAndShow(question_index) {\n    this.get(\"save_answer\",\n      this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2\n        ?\n        { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, run_test_option_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option, present_ques_id: question_index }\n        :\n        this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3\n          ?\n          { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, run_test_option_ids: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options, present_ques_id: question_index }\n          :\n          { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, answer_body: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body, present_ques_id: question_index },\n      (response) => {\n        if (response.success) {\n          let run_test = this.state.run_test;\n          run_test.runtest_can.present_ques_id = question_index;\n          this.setState({ run_test });\n        }\n        else {\n          this.setState({ error: response.message });\n        }\n      }\n    )\n  }\n  saveAnswerAndFinish() {\n    this.get(\"save_answer\",\n      this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2\n        ?\n        { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, run_test_option_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option, present_ques_id: this.state.run_test.runtest_can.present_ques_id }\n        :\n        this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3\n          ?\n          { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, run_test_option_ids: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options, present_ques_id: this.state.run_test.runtest_can.present_ques_id }\n          :\n          { passcode: this.state.run_test.runtest_can.pswd, run_test_id: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].id, answer_body: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body, present_ques_id: this.state.run_test.runtest_can.present_ques_id },\n      (response) => {\n        if (response.success) {\n          this.get(\"finish_test\", { passcode: this.state.run_test.runtest_can.pswd }, (response2) => {\n            if (response2.success) {\n              this.setState({ run_test: null, testEnded: true });\n            }\n            else this.setState({ error: response2.message });\n          });\n        }\n        else {\n          this.setState({ error: response.message });\n        }\n      }\n    )\n  }\n  render() {\n    return (\n      <PaperProvider>\n        <StatusBar />\n        <Portal>\n          <Modal\n            dismissable={false}\n            visible={this.state.loading}\n            theme={theme}\n\n          >\n            <ActivityIndicator />\n          </Modal>\n        </Portal>\n        {\n          this.state.login ?\n            <View style={styles.login} theme={theme}>\n              <View style={styles.loginPasscodeContainer}>\n                <TextInput\n                  label=\"Passcode\"\n                  style={styles.loginPasscode}\n                  value={this.state.login.passcode}\n                  mode=\"outlined\"\n                  secureTextEntry\n                  theme={theme}\n                  onChangeText={text => {\n                    this.setState({ login: { ...this.state.login, passcode: text } })\n                  }}\n                  onSubmitEditing={this.getTest.bind(this)}\n                />\n                <Button\n                  style={styles.loginButton}\n                  contentStyle={styles.loginButtonContent}\n                  labelStyle={styles.loginButtonText}\n                  mode=\"contained\"\n                  color=\"#42c5f5\"\n                  onPress={this.getTest.bind(this)}\n                  disabled={this.state.loading}\n                >Continue</Button>\n              </View>\n              <View style={styles.loginLogoContainer}>\n                <Image style={styles.loginLogo} source={magnox_logo} />\n              </View>\n            </View>\n            :\n            this.state.test\n              ?\n              <View style={styles.test}>\n                <Surface style={styles.top}>\n                  <Image style={styles.testLogo} source={magnox_logo} />\n                  {\n                    this.state.run_test ?\n                      <View>\n                        <Caption>Time left to end</Caption>\n                        <Title>{this.state.testEndTimeLeft}</Title>\n                      </View>\n                      :\n                      null\n                  }\n                  {\n                    this.state.run_test ?\n                      <Button\n                        style={styles.loginButton}\n                        contentStyle={styles.loginButtonContent}\n                        labelStyle={styles.loginButtonText}\n                        mode=\"contained\"\n                        color=\"#42c5f5\"\n                        onPress={() => this.saveAnswerAndFinish()}\n                      >Exit</Button>\n                      :\n                      <Button\n                        style={styles.loginButton}\n                        contentStyle={styles.loginButtonContent}\n                        labelStyle={styles.loginButtonText}\n                        mode=\"contained\"\n                        color=\"#42c5f5\"\n                        onPress={() => this.setState(this._state)}\n                      >Exit</Button>\n                  }\n                </Surface>\n                {\n                  !this.state.run_test ?\n                    <View style={styles.testContainer}>\n                      <Surface style={styles.testCanDetails}>\n                        <Caption>\n                          Name\n                    </Caption>\n                        <Title>\n                          {this.state.test.user_details.first_name}&nbsp;\n                      {this.state.test.user_details.last_name}\n                        </Title>\n                        <Caption>\n                          Email\n                    </Caption>\n                        <Subheading>\n                          {this.state.test.user_details.email}\n                        </Subheading>\n                        <Caption>\n                          Phone\n                    </Caption>\n                        <Subheading>\n                          {this.state.test.user_details.phone}\n                        </Subheading>\n                        <Caption>\n                          Program\n                    </Caption>\n                        <Subheading>\n                          {this.state.test.program.title}\n                        </Subheading>\n                        {\n                          this.state.test.course\n                            ?\n                            <View>\n                              <Caption>\n                                Course\n                          </Caption>\n                              <Subheading>\n                                {this.state.test.course.title}&nbsp;\n                          </Subheading>\n                            </View>\n                            :\n                            null\n                        }\n\n\n                      </Surface>\n                      <Surface style={styles.testDetails}>\n                        <Title style={styles.testTitle}>\n                          {this.state.test.test.title}\n                        </Title>\n                        <Surface style={styles.testInfo}>\n                          {\n                            this.state.test.test_pub.publish_type == 1\n                              ?\n                              <View>\n                                <Caption>\n                                  Start Time\n                          </Caption>\n                                <Subheading>\n                                  Any\n                          </Subheading>\n                              </View>\n                              :\n                              this.state.test.test_pub.publish_type == 2\n                                ?\n                                <View>\n                                  <Caption>\n                                    Start Time\n                          </Caption>\n                                  <Subheading>\n                                    {this.state.test.test_pub.start_datetm}\n                                  </Subheading>\n                                </View>\n                                :\n                                <View>\n                                  <Caption>\n                                    Start Time\n                          </Caption>\n                                  <Subheading>\n                                    from {this.state.test.test_pub.start_datetm} to {this.state.test.test_pub.end_datetm}\n                                  </Subheading>\n                                </View>\n                          }\n                          <View>\n                            <Caption>\n                              Duration\n                    </Caption>\n                            <Subheading>\n                              {this.state.test.test.duration}&nbsp;Minutes\n                    </Subheading>\n                          </View>\n                        </Surface>\n                        <Surface style={styles.testSections}>\n                          {\n                            this.state.test.sections.map(section => <View style={styles.testSection}>\n                              <Caption>\n                                {section.section_name}\n                              </Caption>\n                              <Subheading>\n                                {section.count}&nbsp; Questions\n                              </Subheading>\n                            </View>)\n                          }\n                        </Surface>\n                        <Surface style={styles.testInstructions}>\n                          <Subheading>Instructions</Subheading>\n                          {\n                            Platform.OS === 'web'\n                              ?\n                              <div dangerouslySetInnerHTML={{ __html: this.state.test.test.details }} />\n                              :\n                              <WebView originWhitelist={['*']} source={{ html: this.state.test.test.details }} />\n                          }\n                        </Surface>\n                        {\n                          this.state.test.runtest_can.test_start_flag\n                            ?\n                            <Surface style={styles.testEntry}>\n                              <View>\n                                <Caption>Test attempted at</Caption>\n                                <Title>{this.then(this.state.test.runtest_can.test_start_dttm)}</Title>\n                              </View>\n                              {\n                                this.state.testEnded\n                                  ?\n                                  <View>\n                                    <Caption>Test ended at</Caption>\n                                    <Title>{this.then(this.state.test.runtest_can.test_end_dttm)}</Title>\n                                  </View>\n                                  :\n                                  <View>\n                                    <Caption>Time left to end</Caption>\n                                    <Title>{this.state.testEndTimeLeft}</Title>\n                                    <Button\n                                      style={styles.loginButton}\n                                      contentStyle={styles.loginButtonContent}\n                                      labelStyle={styles.loginButtonText}\n                                      mode=\"contained\"\n                                      color=\"#42c5f5\"\n                                      onPress={this.runTest.bind(this)}\n                                    >Re-enter</Button>\n                                  </View>\n\n                              }\n                            </Surface>\n                            :\n\n                            <Surface style={styles.testEntry}>\n                              {\n                                this.state.testEntryTimeLeft\n                                  ?\n                                  <View>\n                                    <Caption>Time left to start</Caption>\n                                    <Title>{this.state.testEntryTimeLeft}</Title>\n                                  </View>\n                                  :\n                                  this.state.test.test_pub.publish_type != 1 && new Date(this.state.test.test_pub.end_datetm).getTime() < this.now()\n                                    ?\n                                    <View>\n                                      <Caption>Time to attempt test is over at</Caption>\n                                      <Title>{this.state.test.test_pub.end_datetm}</Title>\n                                    </View>\n                                    :\n                                    <Button\n                                      style={styles.loginButton}\n                                      contentStyle={styles.loginButtonContent}\n                                      labelStyle={styles.loginButtonText}\n                                      mode=\"contained\"\n                                      color=\"#42c5f5\"\n                                      onPress={() => {\n                                        let start_datetm = this.state.test.test_pub.publish_type == 1 ? new Date(this.now()) : new Date(this.state.test.test_pub.start_datetm);\n                                        let timer = setInterval(() => {\n                                          if (start_datetm.getTime() < this.now()) {\n                                            clearInterval(timer);\n                                            this.get(\"start_test\", { passcode: this.state.test.runtest_can.pswd }, (response) => {\n                                              if (response.success) {\n                                                this.runTest.bind(this)();\n                                                this.setState({ error: null, testEntryTimeLeft: null });\n                                              }\n                                              else this.setState({ error: response.message ? response.message : \"Some error occurred!\", testEntryTimeLeft: null });\n                                            });\n                                          }\n                                          else {\n                                            this.setState({\n                                              testEntryTimeLeft: this.timeDiff(start_datetm)\n                                            })\n                                          }\n                                        }, 1000);\n                                      }}\n                                    >Continue</Button>\n\n                              }\n                            </Surface>\n                        }\n                      </Surface>\n\n                    </View>\n                    :\n                    <View style={styles.runTestContainer}>\n                      {\n                        this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id]\n                          ?\n                          <Surface style={styles.question}>\n                            <Subheading>Question {this.state.run_test.runtest_can.present_ques_id + 1} of {this.state.run_test.questions.length}</Subheading>\n                            {\n                              Platform.OS === 'web'\n                                ?\n                                <div dangerouslySetInnerHTML={{ __html: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].qbody }} />\n                                :\n                                <WebView source={{ html: this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].qbody }} />\n                            }\n                            {\n                              this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 2\n                                ?\n                                <RadioButton.Group value={this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option} onValueChange={(val) => {\n                                  let run_test = this.state.run_test;\n                                  run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_option = val;\n                                  run_test.questions[this.state.run_test.runtest_can.present_ques_id].status = 1;\n                                  this.setState({ run_test });\n                                }} style={styles.questionT2}>\n                                  {this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].options.map(option => <RadioButton.Item label={\n                                    Platform.OS === 'web'\n                                      ?\n                                      <div dangerouslySetInnerHTML={{ __html: option.body }} />\n                                      :\n                                      <WebView source={{ html: option.body }} />\n                                  } value={option.id} />)}\n                                </RadioButton.Group>\n                                :\n                                this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].type_id == 3\n                                  ?\n                                  <View style={styles.questionT3}>\n                                    {this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].options.map(option, index => <Checkbox.Item label={\n                                      Platform.OS === 'web'\n                                        ?\n                                        <div dangerouslySetInnerHTML={{ __html: option.body }} />\n                                        :\n                                        <WebView source={{ html: option.body }} />\n                                    }\n                                      onPress={() => {\n                                        let run_test = this.state.run_test;\n                                        if (option.id in run_test.questions[run_test.runtest_can.present_ques_id].selected_options) {\n                                          run_test.questions[run_test.runtest_can.present_ques_id].selected_options = run_test.questions[run_test.runtest_can.present_ques_id].selected_options.filter(e => e != option.id);\n                                        }\n                                        else {\n                                          run_test.questions[run_test.runtest_can.present_ques_id].selected_options.push(option.id);\n                                        }\n                                        run_test.questions[run_test.runtest_can.present_ques_id].status = 1;\n                                        this.setState({ run_test });\n                                      }}\n                                      status={option.id in this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].selected_options ? 'checked' : 'unchecked'} />)}\n                                  </View>\n                                  :\n                                  <TextInput\n                                    multiline\n                                    label=\"Answer\"\n                                    style={styles.questionT1}\n                                    value={this.state.run_test.questions[this.state.run_test.runtest_can.present_ques_id].ans_body}\n                                    onChangeText={text => {\n                                      let run_test = this.state.run_test;\n                                      run_test.questions[run_test.runtest_can.present_ques_id].ans_body = text;\n                                      run_test.questions[run_test.runtest_can.present_ques_id].status = 1;\n                                      this.setState({ run_test });\n                                    }}\n                                  />\n                            }\n                            <Surface style={styles.runTestControls}>\n                              <Button\n                                style={styles.loginButton}\n                                contentStyle={styles.loginButtonContent}\n                                labelStyle={styles.loginButtonText}\n                                mode=\"contained\"\n                                color=\"#42c5f5\"\n                                onPress={() => this.saveAnswerAndShow((parseInt(this.state.run_test.runtest_can.present_ques_id) - 1) % this.state.run_test.questions.length)}\n                              >Previous</Button>\n                              <Button\n                                style={styles.loginButton}\n                                contentStyle={styles.loginButtonContent}\n                                labelStyle={styles.loginButtonText}\n                                mode=\"contained\"\n                                color=\"#42c5f5\"\n                                onPress={() => {\n                                  let run_test = this.state.run_test;\n                                  if (run_test.questions[run_test.runtest_can.present_ques_id].type_id == 2) {\n                                    run_test.questions[run_test.runtest_can.present_ques_id].selected_option = 0;\n                                  }\n                                  else if (run_test.questions[run_test.runtest_can.present_ques_id].type_id == 3) {\n                                    run_test.questions[run_test.runtest_can.present_ques_id].selected_options = [];\n                                  }\n                                  else {\n                                    run_test.questions[run_test.runtest_can.present_ques_id].ans_body = null;\n                                  }\n                                  run_test.questions[run_test.runtest_can.present_ques_id].status = 0;\n                                  this.setState({ run_test })\n                                }}\n                              >Clear</Button>\n                              <Button\n                                style={styles.loginButton}\n                                contentStyle={styles.loginButtonContent}\n                                labelStyle={styles.loginButtonText}\n                                mode=\"contained\"\n                                color=\"#42c5f5\"\n                                onPress={() => {\n                                  if (this.state.run_test.runtest_can.present_ques_id == this.state.run_test.questions.length - 1) this.saveAnswerAndFinish();\n                                  else this.saveAnswerAndShow((parseInt(this.state.run_test.runtest_can.present_ques_id) + 1) % this.state.run_test.questions.length)\n                                }\n                                }\n                              >{this.state.run_test.runtest_can.present_ques_id == this.state.run_test.questions.length - 1 ? \"Finish\" : \"Next\"}</Button>\n                            </Surface>\n                          </Surface>\n                          :\n                          null\n                      }\n                      <Surface style={styles.runTestQIndicesContainer}>\n                        <ScrollView>\n                          <View style={styles.runTestQIndices}>\n                            {this.state.run_test.questions.map((question, index) => {\n                              return <TouchableOpacity style={{ margin: 5 }} onPress={() => this.saveAnswerAndShow(index)}>\n                                <Avatar.Text style={{ backgroundColor: this.state.run_test.runtest_can.present_ques_id == index ? \"#42c5f5\" : question.status == 0 ? \"#ff5050\" : \"#50ff50\" }} size={50} label={index + 1} />\n                              </TouchableOpacity>\n                            })}\n                          </View>\n                        </ScrollView>\n                      </Surface>\n                    </View>\n                }\n              </View>\n              :\n              null\n        }\n        <Snackbar\n          visible={this.state.error}\n          onDismiss={() => {\n            this.setState({ error: false });\n          }}\n          style={styles.error}\n          action={{\n            label: 'Close',\n            onPress: () => this.setState({ error: false })\n          }}\n          theme={theme}\n        >\n          <Text style={styles.errorText}>{this.state.error}</Text>\n        </Snackbar>\n      </PaperProvider >\n    );\n  }\n\n  timeDiff(date) {\n    let diff = new Date(date.getTime() - this.now());\n    return (diff.getUTCMonth() ? diff.getUTCMonth() + \" month(s) \" : \"\") +\n      ((diff.getUTCDate() - 1) > 0 ? (diff.getUTCDate() - 1) + \" day(s) \" : \"\") +\n      (diff.getUTCHours() ? diff.getUTCHours() + \" hour(s) \" : \"\") +\n      (diff.getUTCMinutes() ? diff.getUTCMinutes() + \" minute(s) \" : \"\") +\n      (diff.getUTCSeconds() ? diff.getUTCSeconds() + \" second(s) \" : \"\");\n  }\n\n  now() {\n    let curdate = new Date();\n    return curdate.getTime() + curdate.getTimezoneOffset() * 60000;\n  }\n\n  then(date_str) {\n    let date = new Date(date_str.replace(\" \", \"T\"));\n    date = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n    console.log(date_str);\n    return date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n  }\n}\n\n\nAppRegistry.registerComponent(appName, () => Main);"]},"metadata":{},"sourceType":"module"}