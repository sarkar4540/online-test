{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sarkar4540/Code/sarkar nigam/magnox/test-system/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Avatar, Button, DefaultTheme, Text, Modal, Portal, Provider as PaperProvider, Snackbar, TextInput } from 'react-native-paper';\nimport { name as appName } from \"./app.json\";\nimport magnox_logo from \"./assets/magnox.png\";\nvar API_URI = \"http://localhost:3000\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 2,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    placeholder: \"#42c5f5\",\n    primary: \"#42c5f5\",\n    surface: \"#42c5f5\",\n    accent: '#f1c40f'\n  })\n});\n\nvar styles = Platform.select({\n  web: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: 640\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n      width: 640\n    },\n    errorText: {\n      flex: 1\n    }\n  }),\n  default: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"stretch\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\"\n    }\n  })\n});\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      login: {\n        passcode: \"\",\n        buttonLoading: false\n      },\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"getTest\",\n    value: function getTest(e) {\n      var _this2 = this;\n\n      this.setState({\n        login: _objectSpread(_objectSpread({}, this.state.login), {}, {\n          buttonLoading: true\n        })\n      });\n      fetch(API_URI + \"/test\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: {\n          passcode: this.state.login.passcode\n        }\n      }).then(function (res) {\n        res.json().then(function (json) {\n          if (res.status == 200) {\n            console.log(res);\n          } else {\n            _this2.setState({\n              login: _objectSpread({}, _this2.state.login),\n              error: res.message\n            });\n          }\n        }).catch(function (err) {\n          _this2.setState({\n            login: _objectSpread({}, _this2.state.login),\n            error: err.message\n          });\n\n          console.log(err);\n        });\n      }).catch(function (err) {\n        _this2.setState({\n          login: _objectSpread({}, _this2.state.login),\n          error: err.message\n        });\n\n        console.log(err);\n      }).finally(function () {\n        _this2.setState({\n          login: _objectSpread(_objectSpread({}, _this2.state.login), {}, {\n            buttonLoading: false\n          })\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(PaperProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.login,\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.loginPasscodeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        label: \"Test Code\",\n        style: styles.loginPasscode,\n        value: this.state.login.passcode,\n        mode: \"outlined\",\n        secureTextEntry: true,\n        theme: theme,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            login: _objectSpread(_objectSpread({}, _this3.state.login), {}, {\n              passcode: text\n            })\n          });\n\n          console.log(text);\n        },\n        onSubmitEditing: this.getTest.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: this.getTest.bind(this),\n        loading: this.state.login.buttonLoading,\n        disabled: this.state.login.buttonLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, \"Enter Now\")), React.createElement(View, {\n        style: styles.loginLogoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.loginLogo,\n        source: magnox_logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }))), React.createElement(Snackbar, {\n        visible: this.state.error,\n        onDismiss: function onDismiss() {\n          _this3.setState({\n            error: false\n          });\n        },\n        style: styles.error,\n        action: {\n          label: 'Close',\n          onPress: function onPress() {\n            return _this3.setState({\n              error: false\n            });\n          }\n        },\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.errorText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, this.state.error)));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\nAppRegistry.registerComponent(appName, function () {\n  return Main;\n});","map":{"version":3,"sources":["/home/sarkar4540/Code/sarkar nigam/magnox/test-system/App.js"],"names":["React","Avatar","Button","DefaultTheme","Text","Modal","Portal","Provider","PaperProvider","Snackbar","TextInput","name","appName","magnox_logo","API_URI","theme","roundness","colors","placeholder","primary","surface","accent","styles","Platform","select","web","StyleSheet","create","login","flexDirection","alignItems","justifyContent","flex","loginPasscodeContainer","paddingLeft","paddingRight","paddingTop","width","loginButton","marginTop","loginButtonContent","height","loginButtonText","color","loginLogo","resizeMode","loginLogoContainer","error","backgroundColor","errorText","default","Main","props","state","passcode","buttonLoading","e","setState","fetch","method","headers","body","then","res","json","status","console","log","message","catch","err","finally","loginPasscode","text","getTest","bind","label","onPress","Component","AppRegistry","registerComponent"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,YAAzB,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,MAApD,EAA4DC,QAAQ,IAAIC,aAAxE,EAAuFC,QAAvF,EAAiGC,SAAjG,QAAkH,oBAAlH;AACA,SAASC,IAAI,IAAIC,OAAjB;AACA,OAAOC,WAAP;AAEA,IAAMC,OAAO,GAAG,uBAAhB;;AAEA,IAAMC,KAAK,mCACNZ,YADM;AAETa,EAAAA,SAAS,EAAE,CAFF;AAGTC,EAAAA,MAAM,kCACDd,YAAY,CAACc,MADZ;AAEJC,IAAAA,WAAW,EAAE,SAFT;AAEoBC,IAAAA,OAAO,EAAE,SAF7B;AAGJC,IAAAA,OAAO,EAAE,SAHL;AAIJC,IAAAA,MAAM,EAAE;AAJJ;AAHG,EAAX;;AAWA,IAAMC,MAAM,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AAC7BC,EAAAA,GAAG,EAAEC,UAAU,CAACC,MAAX,CAAkB;AACrBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE,QADV;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,IAAI,EAAE;AAJD,KADc;AAOrBC,IAAAA,sBAAsB,EAAE;AACtBC,MAAAA,WAAW,EAAE,EADS;AAEtBC,MAAAA,YAAY,EAAE,EAFQ;AAGtBC,MAAAA,UAAU,EAAE,GAHU;AAItBP,MAAAA,aAAa,EAAE,QAJO;AAKtBE,MAAAA,cAAc,EAAE,QALM;AAMtBC,MAAAA,IAAI,EAAE,CANgB;AAOtBK,MAAAA,KAAK,EAAE;AAPe,KAPH;AAgBrBC,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AADA,KAhBQ;AAmBrBC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,MAAM,EAAE;AADU,KAnBC;AAsBrBC,IAAAA,eAAe,EAAE;AACfC,MAAAA,KAAK,EAAE;AADQ,KAtBI;AAyBrBC,IAAAA,SAAS,EAAE;AACTP,MAAAA,KAAK,EAAE,GADE;AAETI,MAAAA,MAAM,EAAE,GAFC;AAGTI,MAAAA,UAAU,EAAE;AAHH,KAzBU;AA8BrBC,IAAAA,kBAAkB,EAAE;AAClBhB,MAAAA,UAAU,EAAE;AADM,KA9BC;AAiCrBiB,IAAAA,KAAK,EAAE;AACLlB,MAAAA,aAAa,EAAE,KADV;AAELmB,MAAAA,eAAe,EAAE,MAFZ;AAGLX,MAAAA,KAAK,EAAE;AAHF,KAjCc;AAsCrBY,IAAAA,SAAS,EAAE;AACTjB,MAAAA,IAAI,EAAE;AADG;AAtCU,GAAlB,CADwB;AA2C7BkB,EAAAA,OAAO,EAAExB,UAAU,CAACC,MAAX,CAAkB;AACzBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE,QADV;AAELC,MAAAA,UAAU,EAAE,SAFP;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,IAAI,EAAE;AAJD,KADkB;AAOzBC,IAAAA,sBAAsB,EAAE;AACtBC,MAAAA,WAAW,EAAE,EADS;AAEtBC,MAAAA,YAAY,EAAE,EAFQ;AAGtBC,MAAAA,UAAU,EAAE,GAHU;AAItBP,MAAAA,aAAa,EAAE,QAJO;AAKtBE,MAAAA,cAAc,EAAE,QALM;AAMtBC,MAAAA,IAAI,EAAE;AANgB,KAPC;AAezBM,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AADA,KAfY;AAkBzBC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,MAAM,EAAE;AADU,KAlBK;AAqBzBC,IAAAA,eAAe,EAAE;AACfC,MAAAA,KAAK,EAAE;AADQ,KArBQ;AAwBzBC,IAAAA,SAAS,EAAE;AACTP,MAAAA,KAAK,EAAE,GADE;AAETI,MAAAA,MAAM,EAAE,GAFC;AAGTI,MAAAA,UAAU,EAAE;AAHH,KAxBc;AA6BzBC,IAAAA,kBAAkB,EAAE;AAClBhB,MAAAA,UAAU,EAAE;AADM,KA7BK;AAgCzBiB,IAAAA,KAAK,EAAE;AACLlB,MAAAA,aAAa,EAAE,KADV;AAELmB,MAAAA,eAAe,EAAE;AAFZ;AAhCkB,GAAlB;AA3CoB,CAAhB,CAAf;;IAmFqBG,I;;;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXzB,MAAAA,KAAK,EAAE;AACL0B,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,aAAa,EAAE;AAFV,OADI;AAKXR,MAAAA,KAAK,EAAE;AALI,KAAb;AAFiB;AASlB;;;;4BACOS,C,EAAG;AAAA;;AACT,WAAKC,QAAL,CAAc;AAAE7B,QAAAA,KAAK,kCAAO,KAAKyB,KAAL,CAAWzB,KAAlB;AAAyB2B,UAAAA,aAAa,EAAE;AAAxC;AAAP,OAAd;AACAG,MAAAA,KAAK,CACH5C,OAAO,GAAG,OADP,EAEH;AAAE6C,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAA3B;AAAmEC,QAAAA,IAAI,EAAE;AAAEP,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWzB,KAAX,CAAiB0B;AAA7B;AAAzE,OAFG,CAAL,CAGEQ,IAHF,CAGO,UAAAC,GAAG,EAAI;AACZA,QAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgB,UAAAE,IAAI,EAAI;AACtB,cAAID,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,WAFD,MAGK;AACH,YAAA,MAAI,CAACN,QAAL,CAAc;AAAE7B,cAAAA,KAAK,oBAAO,MAAI,CAACyB,KAAL,CAAWzB,KAAlB,CAAP;AAAkCmB,cAAAA,KAAK,EAAEgB,GAAG,CAACK;AAA7C,aAAd;AACD;AACF,SAPD,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZ,UAAA,MAAI,CAACb,QAAL,CAAc;AAAE7B,YAAAA,KAAK,oBAAO,MAAI,CAACyB,KAAL,CAAWzB,KAAlB,CAAP;AAAkCmB,YAAAA,KAAK,EAAEuB,GAAG,CAACF;AAA7C,WAAd;;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,SAXH;AAYD,OAhBD,EAgBGD,KAhBH,CAgBS,UAAAC,GAAG,EAAI;AACd,QAAA,MAAI,CAACb,QAAL,CAAc;AAAE7B,UAAAA,KAAK,oBAAO,MAAI,CAACyB,KAAL,CAAWzB,KAAlB,CAAP;AAAkCmB,UAAAA,KAAK,EAAEuB,GAAG,CAACF;AAA7C,SAAd;;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OAnBD,EAmBGC,OAnBH,CAmBW,YAAM;AACf,QAAA,MAAI,CAACd,QAAL,CAAc;AAAE7B,UAAAA,KAAK,kCAAO,MAAI,CAACyB,KAAL,CAAWzB,KAAlB;AAAyB2B,YAAAA,aAAa,EAAE;AAAxC;AAAP,SAAd;AACD,OArBD;AAsBD;;;6BACQ;AAAA;;AACP,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjC,MAAM,CAACM,KAApB;AAA2B,QAAA,KAAK,EAAEb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACW,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,KAAK,EAAEX,MAAM,CAACkD,aAFhB;AAGE,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWzB,KAAX,CAAiB0B,QAH1B;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,eAAe,MALjB;AAME,QAAA,KAAK,EAAEvC,KANT;AAOE,QAAA,YAAY,EAAE,sBAAA0D,IAAI,EAAI;AACpB,UAAA,MAAI,CAAChB,QAAL,CAAc;AAAE7B,YAAAA,KAAK,kCAAO,MAAI,CAACyB,KAAL,CAAWzB,KAAlB;AAAyB0B,cAAAA,QAAQ,EAAEmB;AAAnC;AAAP,WAAd;;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACD,SAVH;AAWE,QAAA,eAAe,EAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAcE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAErD,MAAM,CAACgB,WADhB;AAEE,QAAA,YAAY,EAAEhB,MAAM,CAACkB,kBAFvB;AAGE,QAAA,UAAU,EAAElB,MAAM,CAACoB,eAHrB;AAIE,QAAA,IAAI,EAAC,WAJP;AAKE,QAAA,KAAK,EAAC,SALR;AAME,QAAA,OAAO,EAAE,KAAKgC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CANX;AAOE,QAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWzB,KAAX,CAAiB2B,aAP5B;AAQE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWzB,KAAX,CAAiB2B,aAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdF,CADF,EA0BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjC,MAAM,CAACwB,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAExB,MAAM,CAACsB,SAArB;AAAgC,QAAA,MAAM,EAAE/B,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA1BF,CAFF,EAgCE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKwC,KAAL,CAAWN,KADtB;AAEE,QAAA,SAAS,EAAE,qBAAM;AACf,UAAA,MAAI,CAACU,QAAL,CAAc;AAAEV,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD,SAJH;AAKE,QAAA,KAAK,EAAEzB,MAAM,CAACyB,KALhB;AAME,QAAA,MAAM,EAAE;AACN6B,UAAAA,KAAK,EAAE,OADD;AAENC,UAAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACpB,QAAL,CAAc;AAAEV,cAAAA,KAAK,EAAE;AAAT,aAAd,CAAN;AAAA;AAFH,SANV;AAUE,QAAA,KAAK,EAAEhC,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAAC2B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKI,KAAL,CAAWN,KAA3C,CAZF,CAhCF,CADF;AAiDD;;;;EAtF+B/C,KAAK,CAAC8E,S;;SAAnB3B,I;AA2FrB4B,WAAW,CAACC,iBAAZ,CAA8BpE,OAA9B,EAAuC;AAAA,SAAMuC,IAAN;AAAA,CAAvC","sourcesContent":["import * as React from 'react';\nimport { AppRegistry, Platform, StyleSheet, View, Image, StatusBar } from 'react-native';\nimport { Avatar, Button, DefaultTheme, Text, Modal, Portal, Provider as PaperProvider, Snackbar, TextInput } from 'react-native-paper';\nimport { name as appName } from './app.json';\nimport magnox_logo from './assets/magnox.png';\n\nconst API_URI = \"http://localhost:3000\";\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    placeholder: \"#42c5f5\", primary: \"#42c5f5\",\n    surface: \"#42c5f5\",\n    accent: '#f1c40f',\n  },\n};\n\nconst styles = Platform.select({\n  web: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: 640\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n      width: 640\n    },\n    errorText: {\n      flex: 1\n    }\n  }),\n  default: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"stretch\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n    }\n\n  })\n});\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: {\n        passcode: \"\",\n        buttonLoading: false\n      },\n      error: false,\n    }\n  }\n  getTest(e) {\n    this.setState({ login: { ...this.state.login, buttonLoading: true } })\n    fetch(\n      API_URI + \"/test\",\n      { method: \"POST\", headers: { \"Content-Type\": \"application/json\" }, body: { passcode: this.state.login.passcode } }\n    ).then(res => {\n      res.json().then(json => {\n        if (res.status == 200) {\n          console.log(res);\n        }\n        else {\n          this.setState({ login: { ...this.state.login }, error: res.message });\n        }\n      })\n        .catch(err => {\n          this.setState({ login: { ...this.state.login }, error: err.message })\n          console.log(err);\n        })\n    }).catch(err => {\n      this.setState({ login: { ...this.state.login }, error: err.message })\n      console.log(err);\n    }).finally(() => {\n      this.setState({ login: { ...this.state.login, buttonLoading: false } });\n    });\n  }\n  render() {\n    return (\n      <PaperProvider>\n        <StatusBar />\n        <View style={styles.login} theme={theme}>\n          <View style={styles.loginPasscodeContainer}>\n            <TextInput\n              label=\"Test Code\"\n              style={styles.loginPasscode}\n              value={this.state.login.passcode}\n              mode=\"outlined\"\n              secureTextEntry\n              theme={theme}\n              onChangeText={text => {\n                this.setState({ login: { ...this.state.login, passcode: text } })\n                console.log(text);\n              }}\n              onSubmitEditing={this.getTest.bind(this)}\n            />\n            <Button\n              style={styles.loginButton}\n              contentStyle={styles.loginButtonContent}\n              labelStyle={styles.loginButtonText}\n              mode=\"contained\"\n              color=\"#42c5f5\"\n              onPress={this.getTest.bind(this)}\n              loading={this.state.login.buttonLoading}\n              disabled={this.state.login.buttonLoading}\n            >Enter Now</Button>\n          </View>\n          <View style={styles.loginLogoContainer}>\n            <Image style={styles.loginLogo} source={magnox_logo} />\n          </View>\n        </View>\n        <Snackbar\n          visible={this.state.error}\n          onDismiss={() => {\n            this.setState({ error: false });\n          }}\n          style={styles.error}\n          action={{\n            label: 'Close',\n            onPress: () => this.setState({ error: false })\n          }}\n          theme={theme}\n        >\n          <Text style={styles.errorText}>{this.state.error}</Text>\n        </Snackbar>\n      </PaperProvider >\n    );\n  }\n\n}\n\n\nAppRegistry.registerComponent(appName, () => Main);"]},"metadata":{},"sourceType":"module"}