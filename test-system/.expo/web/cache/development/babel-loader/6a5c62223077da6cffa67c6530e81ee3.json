{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sarkar4540/Code/sarkar nigam/magnox/test-system/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Avatar, Button, DefaultTheme, Text, Modal, Portal, Provider as PaperProvider, Snackbar, TextInput, ActivityIndicator } from 'react-native-paper';\nimport { name as appName } from \"./app.json\";\nimport magnox_logo from \"./assets/magnox.png\";\nvar API_URI = \"http://localhost:3333\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 2,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    placeholder: \"#42c5f5\",\n    primary: \"#42c5f5\",\n    surface: \"#42c5f5\",\n    accent: '#f1c40f'\n  })\n});\n\nvar styles = Platform.select({\n  web: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: 640\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n      width: 640,\n      alignSelf: \"center\"\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    }\n  }),\n  default: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"stretch\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\"\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    }\n  })\n});\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      login: {\n        passcode: \"\"\n      },\n      test: null,\n      loading: false,\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"get\",\n    value: function get() {\n      var _this2 = this;\n\n      var uri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var body = arguments.length > 1 ? arguments[1] : undefined;\n      var cb = arguments.length > 2 ? arguments[2] : undefined;\n      this.setState({\n        loading: true\n      });\n      fetch(API_URI + \"/\" + uri, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body ? JSON.stringify(body) : \"{}\"\n      }).then(function (res) {\n        if (res.status == 200) {\n          res.json().then(function (json) {\n            if (cb) cb(json);\n          }).catch(function (err) {\n            _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n              error: err.message\n            }));\n\n            console.log(err);\n          });\n        } else {\n          res.json().then(function (json) {\n            _this2.setState({\n              error: json.message\n            });\n          }).catch(function (err) {\n            _this2.setState({\n              error: \"Error networking!\"\n            });\n\n            console.log(err);\n          });\n        }\n      }).catch(function (err) {\n        _this2.setState({\n          error: err.message\n        });\n\n        console.log(err);\n      }).finally(function () {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(PaperProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }), React.createElement(Portal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, React.createElement(Modal, {\n        dismissable: false,\n        visible: this.state.loading,\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }))), this.state.login ? React.createElement(View, {\n        style: styles.login,\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.loginPasscodeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        label: \"Passcode\",\n        style: styles.loginPasscode,\n        value: this.state.login.passcode,\n        mode: \"outlined\",\n        secureTextEntry: true,\n        theme: theme,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            login: _objectSpread(_objectSpread({}, _this3.state.login), {}, {\n              passcode: text\n            })\n          });\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          return _this3.get(\"test\", {\n            passcode: _this3.state.login.passcode\n          }, function (test) {\n            if (test.runtest_can) {\n              _this3.setState({\n                test: test,\n                error: null,\n                login: null\n              });\n            } else {\n              _this3.setState({\n                error: \"Invalid passcode\"\n              });\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        style: styles.loginButton,\n        contentStyle: styles.loginButtonContent,\n        labelStyle: styles.loginButtonText,\n        mode: \"contained\",\n        color: \"#42c5f5\",\n        onPress: function onPress() {\n          return _this3.get(\"test\", {\n            passcode: _this3.state.login.passcode\n          }, function (test) {\n            if (test.runtest_can) {\n              _this3.setState({\n                test: test,\n                error: null,\n                login: null\n              });\n            } else {\n              _this3.setState({\n                error: \"Invalid passcode\"\n              });\n            }\n          });\n        },\n        disabled: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, \"Continue\")), React.createElement(View, {\n        style: styles.loginLogoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        style: styles.loginLogo,\n        source: magnox_logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }))) : this.state.test ? React.createElement(View, {\n        style: styles.test,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      }) : null, React.createElement(Snackbar, {\n        visible: this.state.error,\n        onDismiss: function onDismiss() {\n          _this3.setState({\n            error: false\n          });\n        },\n        style: styles.error,\n        action: {\n          label: 'Close',\n          onPress: function onPress() {\n            return _this3.setState({\n              error: false\n            });\n          }\n        },\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.errorText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, this.state.error)));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\nAppRegistry.registerComponent(appName, function () {\n  return Main;\n});","map":{"version":3,"sources":["/home/sarkar4540/Code/sarkar nigam/magnox/test-system/App.js"],"names":["React","Avatar","Button","DefaultTheme","Text","Modal","Portal","Provider","PaperProvider","Snackbar","TextInput","ActivityIndicator","name","appName","magnox_logo","API_URI","theme","roundness","colors","placeholder","primary","surface","accent","styles","Platform","select","web","StyleSheet","create","login","flexDirection","alignItems","justifyContent","flex","loginPasscodeContainer","paddingLeft","paddingRight","paddingTop","width","loginButton","marginTop","loginButtonContent","height","loginButtonText","color","loginLogo","resizeMode","loginLogoContainer","error","backgroundColor","alignSelf","errorText","default","Main","props","state","passcode","test","loading","uri","body","cb","setState","fetch","method","headers","JSON","stringify","then","res","status","json","catch","err","message","console","log","finally","loginPasscode","text","get","runtest_can","label","onPress","Component","AppRegistry","registerComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { AppRegistry, Platform, StyleSheet, View, Image, StatusBar } from 'react-native';\nimport { Avatar, Button, DefaultTheme, Text, Modal, Portal, Provider as PaperProvider, Snackbar, TextInput, ActivityIndicator } from 'react-native-paper';\nimport { name as appName } from './app.json';\nimport magnox_logo from './assets/magnox.png';\n\nconst API_URI = \"http://localhost:3333\";\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    placeholder: \"#42c5f5\", primary: \"#42c5f5\",\n    surface: \"#42c5f5\",\n    accent: '#f1c40f',\n  },\n};\n\nconst styles = Platform.select({\n  web: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: 640\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n      width: 640,\n      alignSelf: \"center\"\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    }\n  }),\n  default: StyleSheet.create({\n    login: {\n      flexDirection: \"column\",\n      alignItems: \"stretch\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginPasscodeContainer: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      paddingTop: 250,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    loginButton: {\n      marginTop: 10\n    },\n    loginButtonContent: {\n      height: 50\n    },\n    loginButtonText: {\n      color: \"#ffffff\"\n    },\n    loginLogo: {\n      width: 250,\n      height: 250,\n      resizeMode: \"contain\"\n    },\n    loginLogoContainer: {\n      alignItems: \"center\"\n    },\n    error: {\n      flexDirection: \"row\",\n      backgroundColor: \"#f00\",\n    },\n    errorText: {\n      color: \"#fff\",\n      flex: 1\n    },\n  })\n});\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: {\n        passcode: \"\",\n      },\n      test: null,\n      loading: false,\n      error: false,\n    }\n  }\n  get(uri = \"\", body, cb) {\n    this.setState({ loading: true })\n    fetch(\n      API_URI + \"/\" + uri,\n      { method: \"POST\", headers: { \"Content-Type\": \"application/json\" }, body: body ? JSON.stringify(body) : \"{}\" }\n    ).then(res => {\n      if (res.status == 200) {\n        res.json()\n          .then(json => {\n            if (cb) cb(json);\n          })\n          .catch(err => {\n            this.setState({ ...this.state, error: err.message })\n            console.log(err);\n          })\n      }\n      else {\n        res.json()\n          .then(json => {\n            this.setState({ error: json.message });\n          })\n          .catch(err => {\n            this.setState({ error: \"Error networking!\" })\n            console.log(err);\n          })\n      }\n    }).catch(err => {\n      this.setState({ error: err.message })\n      console.log(err);\n    }).finally(() => {\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    return (\n      <PaperProvider>\n        <StatusBar />\n        <Portal>\n          <Modal\n            dismissable={false}\n            visible={this.state.loading}\n            theme={theme}\n\n          >\n            <ActivityIndicator />\n          </Modal>\n        </Portal>\n        {\n          this.state.login ?\n            <View style={styles.login} theme={theme}>\n              <View style={styles.loginPasscodeContainer}>\n                <TextInput\n                  label=\"Passcode\"\n                  style={styles.loginPasscode}\n                  value={this.state.login.passcode}\n                  mode=\"outlined\"\n                  secureTextEntry\n                  theme={theme}\n                  onChangeText={text => {\n                    this.setState({ login: { ...this.state.login, passcode: text } })\n                  }}\n                  onSubmitEditing={() => this.get(\"test\", { passcode: this.state.login.passcode }, test => {\n                    if (test.runtest_can) {\n                      this.setState({ test, error: null, login: null });\n                    }\n                    else {\n                      this.setState({ error: \"Invalid passcode\" })\n                    }\n                  })}\n                />\n                <Button\n                  style={styles.loginButton}\n                  contentStyle={styles.loginButtonContent}\n                  labelStyle={styles.loginButtonText}\n                  mode=\"contained\"\n                  color=\"#42c5f5\"\n                  onPress={() => this.get(\"test\", { passcode: this.state.login.passcode }, test => {\n                    if (test.runtest_can) {\n                      this.setState({ test, error: null, login: null });\n                    }\n                    else {\n                      this.setState({ error: \"Invalid passcode\" })\n                    }\n                  })}\n                  disabled={this.state.loading}\n                >Continue</Button>\n              </View>\n              <View style={styles.loginLogoContainer}>\n                <Image style={styles.loginLogo} source={magnox_logo} />\n              </View>\n            </View>\n            :\n            this.state.test\n              ?\n              <View style={styles.test}>\n\n              </View>\n              :\n              null\n        }\n        <Snackbar\n          visible={this.state.error}\n          onDismiss={() => {\n            this.setState({ error: false });\n          }}\n          style={styles.error}\n          action={{\n            label: 'Close',\n            onPress: () => this.setState({ error: false })\n          }}\n          theme={theme}\n        >\n          <Text style={styles.errorText}>{this.state.error}</Text>\n        </Snackbar>\n      </PaperProvider >\n    );\n  }\n\n}\n\n\nAppRegistry.registerComponent(appName, () => Main);"]},"metadata":{},"sourceType":"module"}